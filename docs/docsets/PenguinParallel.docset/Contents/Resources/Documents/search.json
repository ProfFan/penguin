{"Extensions/Array.html#/makeParItr()":{"name":"makeParItr()","parent_name":"Array"},"Structs/ArrayParallelIterator.html#/Element":{"name":"Element","parent_name":"ArrayParallelIterator"},"Structs/ArrayParallelIterator.html#/next()":{"name":"next()","parent_name":"ArrayParallelIterator"},"Structs/ArrayParallelIterator.html#/preciseCount":{"name":"preciseCount","parent_name":"ArrayParallelIterator"},"Protocols/ParallelSequence.html#/Element":{"name":"Element","parent_name":"ParallelSequence"},"Protocols/ParallelSequence.html#/ParallelIterator":{"name":"ParallelIterator","parent_name":"ParallelSequence"},"Protocols/ParallelSequence.html#/makeParItr()":{"name":"makeParItr()","parent_name":"ParallelSequence"},"Protocols/ParallelIteratorProtocol.html#/Element":{"name":"Element","parent_name":"ParallelIteratorProtocol"},"Protocols/ParallelIteratorProtocol.html#/next()":{"name":"next()","parent_name":"ParallelIteratorProtocol"},"Protocols/ParallelIteratorProtocol.html#/preciseCount":{"name":"preciseCount","abstract":"<p>A precise count, used for parallelism purposes.</p>","parent_name":"ParallelIteratorProtocol"},"Protocols/ParallelIteratorProtocol.html":{"name":"ParallelIteratorProtocol","abstract":"<p>&hellip;</p>"},"Protocols/ParallelSequence.html":{"name":"ParallelSequence"},"Structs/ArrayParallelIterator.html":{"name":"ArrayParallelIterator"},"Extensions/Array.html":{"name":"Array"},"Extensions/Sequence.html#/makePipelineIterator(name:file:function:line:)":{"name":"makePipelineIterator(name:file:function:line:)","parent_name":"Sequence"},"Structs/Zip2PipelineIterator.html#/Element":{"name":"Element","parent_name":"Zip2PipelineIterator"},"Structs/Zip2PipelineIterator.html#/init(_:_:)":{"name":"init(_:_:)","parent_name":"Zip2PipelineIterator"},"Structs/Zip2PipelineIterator.html#/next()":{"name":"next()","parent_name":"Zip2PipelineIterator"},"Structs/TransformPipelineIterator.html#/Element":{"name":"Element","parent_name":"TransformPipelineIterator"},"Structs/TransformPipelineIterator.html#/TransformFunction":{"name":"TransformFunction","parent_name":"TransformPipelineIterator"},"Structs/TransformPipelineIterator.html#/init(_:name:threadCount:bufferSize:transform:)":{"name":"init(_:name:threadCount:bufferSize:transform:)","parent_name":"TransformPipelineIterator"},"Structs/TransformPipelineIterator.html#/next()":{"name":"next()","parent_name":"TransformPipelineIterator"},"Structs/TakePipelineIterator.html#/next()":{"name":"next()","parent_name":"TakePipelineIterator"},"Structs/SequencePipelineIterator.html#/Element":{"name":"Element","parent_name":"SequencePipelineIterator"},"Structs/SequencePipelineIterator.html#/next()":{"name":"next()","parent_name":"SequencePipelineIterator"},"Structs/ReduceWindowPipelineIterator/Iterator.html#/next()":{"name":"next()","parent_name":"Iterator"},"Structs/ReduceWindowPipelineIterator.html#/Element":{"name":"Element","parent_name":"ReduceWindowPipelineIterator"},"Structs/ReduceWindowPipelineIterator.html#/ReduceFunction":{"name":"ReduceFunction","parent_name":"ReduceWindowPipelineIterator"},"Structs/ReduceWindowPipelineIterator/Iterator.html":{"name":"Iterator","abstract":"<p>Note: copying this iterator outside of the function will result in undefined behavior!</p>","parent_name":"ReduceWindowPipelineIterator"},"Structs/ReduceWindowPipelineIterator.html#/next()":{"name":"next()","parent_name":"ReduceWindowPipelineIterator"},"Structs/RangePipelineIterator.html#/Element":{"name":"Element","parent_name":"RangePipelineIterator"},"Structs/RangePipelineIterator.html#/init(start:end:step:)":{"name":"init(start:end:step:)","parent_name":"RangePipelineIterator"},"Structs/RangePipelineIterator.html#/next()":{"name":"next()","parent_name":"RangePipelineIterator"},"Structs/RandomIndicesIterator.html#/Element":{"name":"Element","parent_name":"RandomIndicesIterator"},"Structs/RandomIndicesIterator.html#/init(count:rng:)":{"name":"init(count:rng:)","parent_name":"RandomIndicesIterator"},"Structs/RandomIndicesIterator.html#/next()":{"name":"next()","parent_name":"RandomIndicesIterator"},"Structs/RandomCollectionPipelineIterator.html#/Element":{"name":"Element","parent_name":"RandomCollectionPipelineIterator"},"Structs/RandomCollectionPipelineIterator.html#/init(_:_:)":{"name":"init(_:_:)","parent_name":"RandomCollectionPipelineIterator"},"Structs/RandomCollectionPipelineIterator.html#/next()":{"name":"next()","parent_name":"RandomCollectionPipelineIterator"},"Structs/PrefetchPipelineIterator.html#/Element":{"name":"Element","parent_name":"PrefetchPipelineIterator"},"Structs/PrefetchPipelineIterator.html#/init(underlying:prefetchCount:)":{"name":"init(underlying:prefetchCount:)","parent_name":"PrefetchPipelineIterator"},"Structs/PrefetchPipelineIterator.html#/next()":{"name":"next()","parent_name":"PrefetchPipelineIterator"},"Structs/InterleavePipelineIterator.html#/Element":{"name":"Element","parent_name":"InterleavePipelineIterator"},"Structs/InterleavePipelineIterator.html#/Func":{"name":"Func","parent_name":"InterleavePipelineIterator"},"Structs/InterleavePipelineIterator.html#/next()":{"name":"next()","parent_name":"InterleavePipelineIterator"},"Structs/GeneratorPipelineIterator.html#/Element":{"name":"Element","parent_name":"GeneratorPipelineIterator"},"Structs/GeneratorPipelineIterator.html#/GenFunc":{"name":"GenFunc","parent_name":"GeneratorPipelineIterator"},"Structs/GeneratorPipelineIterator.html#/next()":{"name":"next()","parent_name":"GeneratorPipelineIterator"},"Structs/DropPipelineIterator.html#/next()":{"name":"next()","parent_name":"DropPipelineIterator"},"Structs/DropPipelineIterator.html":{"name":"DropPipelineIterator"},"Structs/GeneratorPipelineIterator.html":{"name":"GeneratorPipelineIterator"},"Structs/InterleavePipelineIterator.html":{"name":"InterleavePipelineIterator"},"Structs/PrefetchPipelineIterator.html":{"name":"PrefetchPipelineIterator"},"Structs/RandomCollectionPipelineIterator.html":{"name":"RandomCollectionPipelineIterator","abstract":"<p>Returns a random permutation of elements in collection C.</p>"},"Structs/RandomIndicesIterator.html":{"name":"RandomIndicesIterator","abstract":"<p>Generates a random purmutation  of the integers <code>0</code> to <code>count</code>.</p>"},"Structs/RangePipelineIterator.html":{"name":"RangePipelineIterator"},"Structs/ReduceWindowPipelineIterator.html":{"name":"ReduceWindowPipelineIterator"},"Structs/SequencePipelineIterator.html":{"name":"SequencePipelineIterator"},"Structs/TakePipelineIterator.html":{"name":"TakePipelineIterator"},"Structs/TransformPipelineIterator.html":{"name":"TransformPipelineIterator","abstract":"<p>TransformPipelineIterator is used to run arbitrary user-supplied transformations in a pipelined fashion.</p>"},"Structs/Zip2PipelineIterator.html":{"name":"Zip2PipelineIterator"},"Extensions/Sequence.html":{"name":"Sequence"},"Protocols/PipelineIteratorProtocol.html#/Element":{"name":"Element","parent_name":"PipelineIteratorProtocol"},"Protocols/PipelineIteratorProtocol.html#/next()":{"name":"next()","abstract":"<p>Retrieves the next element in the sequence.</p>","parent_name":"PipelineIteratorProtocol"},"Protocols/PipelineIteratorProtocol.html#/interleave(cycleCount:workerCount:perWorkerPrefetchCount:f:)":{"name":"interleave(cycleCount:workerCount:perWorkerPrefetchCount:f:)","parent_name":"PipelineIteratorProtocol"},"Protocols/PipelineIteratorProtocol.html#/prefetch(_:)":{"name":"prefetch(_:)","parent_name":"PipelineIteratorProtocol"},"Protocols/PipelineIteratorProtocol.html#/collect()":{"name":"collect()","abstract":"<p>Runs the iterator, collecting the outputs into an array.</p>","parent_name":"PipelineIteratorProtocol"},"Protocols/PipelineIteratorProtocol.html#/enumerated()":{"name":"enumerated()","parent_name":"PipelineIteratorProtocol"},"Protocols/PipelineIteratorProtocol.html#/reduceWindow(windowSize:f:)":{"name":"reduceWindow(windowSize:f:)","parent_name":"PipelineIteratorProtocol"},"Protocols/PipelineIteratorProtocol.html#/naiveBatch(size:)":{"name":"naiveBatch(size:)","parent_name":"PipelineIteratorProtocol"},"Protocols/PipelineIteratorProtocol.html#/drop(_:)":{"name":"drop(_:)","parent_name":"PipelineIteratorProtocol"},"Protocols/PipelineIteratorProtocol.html#/take(_:)":{"name":"take(_:)","parent_name":"PipelineIteratorProtocol"},"Protocols/PipelineIteratorProtocol.html#/map(name:f:)":{"name":"map(name:f:)","parent_name":"PipelineIteratorProtocol"},"Protocols/PipelineIteratorProtocol.html#/filter(name:f:)":{"name":"filter(name:f:)","parent_name":"PipelineIteratorProtocol"},"Protocols/PipelineIteratorProtocol.html#/compactMap(name:f:)":{"name":"compactMap(name:f:)","parent_name":"PipelineIteratorProtocol"},"Enums/PipelineIterator.html#/generate(from:)":{"name":"generate(from:)","parent_name":"PipelineIterator"},"Enums/PipelineIterator.html#/_allThreadsStopped()":{"name":"_allThreadsStopped()","abstract":"<p>Determines if all worker threads started by Pipeline iterators process-wide have been stopped.</p>","parent_name":"PipelineIterator"},"Enums/PipelineIterator.html#/range(from:to:step:)":{"name":"range(from:to:step:)","parent_name":"PipelineIterator"},"Enums/PipelineIterator.html#/range(_:)":{"name":"range(_:)","parent_name":"PipelineIterator"},"Enums/PipelineIterator.html#/zip(_:_:)":{"name":"zip(_:_:)","parent_name":"PipelineIterator"},"Enums/PipelineIterator.html":{"name":"PipelineIterator","abstract":"<p>An empty enum to hang API calls off of.</p>"},"Protocols/PipelineIteratorProtocol.html":{"name":"PipelineIteratorProtocol","abstract":"<p>A protocol for pipelined iterators that work in a streaming fashion.</p>"},"Pipelines.html":{"name":"Pipelines"},"Pipeline%20Internals.html":{"name":"Pipeline Internals"},"Parallel.html":{"name":"Parallel"}}