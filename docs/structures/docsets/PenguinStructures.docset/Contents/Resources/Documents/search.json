{"Structs/ParallelGraphAlgorithmContext.html#/s:17PenguinStructures29ParallelGraphAlgorithmContextV6vertex8VertexIdQzvp":{"name":"vertex","abstract":"<p>The identifier of the vertex this function execution is operating upon.</p>","parent_name":"ParallelGraphAlgorithmContext"},"Structs/ParallelGraphAlgorithmContext.html#/s:17PenguinStructures29ParallelGraphAlgorithmContextV11globalStateq0_vp":{"name":"globalState","abstract":"<p>The global state provided to each vertex.</p>","parent_name":"ParallelGraphAlgorithmContext"},"Structs/ParallelGraphAlgorithmContext.html#/s:17PenguinStructures29ParallelGraphAlgorithmContextV6vertex11globalState5graph7mailboxACyxq_q0_q1_G8VertexIdQz_q0_xSpyq1_Gtcfc":{"name":"init(vertex:globalState:graph:mailbox:)","abstract":"<p>Initializes <code>self</code> with the given properties.</p>","parent_name":"ParallelGraphAlgorithmContext"},"Structs/ParallelGraphAlgorithmContext.html#/s:17PenguinStructures29ParallelGraphAlgorithmContextV5inboxq_Sgvp":{"name":"inbox","abstract":"<p>The merged message resulting from merging all the messages sent in the last parallel step.</p>","parent_name":"ParallelGraphAlgorithmContext"},"Structs/ParallelGraphAlgorithmContext.html#/s:17PenguinStructures29ParallelGraphAlgorithmContextV4send_2toyq__8VertexIdQztF":{"name":"send(_:to:)","abstract":"<p>Sends <code>message</code> to <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/ParallelGraphAlgorithmContext.html#/s:17PenguinStructures29ParallelGraphAlgorithmContextV6vertex8VertexIdQzvp\">vertex</a></code>, which will be received at the next step.</p>","parent_name":"ParallelGraphAlgorithmContext"},"Structs/ParallelGraphAlgorithmContext.html#/s:17PenguinStructures29ParallelGraphAlgorithmContextV15getEdgeProperty3for2in5ValueQyd__0H2IdQz_qd__tAA0dhI3MapRd__0D0Qyd__ALRt1_lF":{"name":"getEdgeProperty(for:in:)","abstract":"<p>Retrieve edge propreties.</p>","parent_name":"ParallelGraphAlgorithmContext"},"Structs/ParallelGraphAlgorithmContext.html#/s:17PenguinStructures29ParallelGraphAlgorithmContextVA2A09IncidenceD0RzrlE9outDegreeSivp":{"name":"outDegree","abstract":"<p>The number of edges that source from the current vertex.</p>","parent_name":"ParallelGraphAlgorithmContext"},"Structs/ParallelGraphAlgorithmContext.html#/s:17PenguinStructures29ParallelGraphAlgorithmContextVA2A09IncidenceD0RzrlE5edges20VertexEdgeCollectionQzvp":{"name":"edges","abstract":"<p>The edges that source from the current vertex.</p>","parent_name":"ParallelGraphAlgorithmContext"},"Structs/ParallelGraphAlgorithmContext.html#/s:17PenguinStructures29ParallelGraphAlgorithmContextVA2A09IncidenceD0RzrlE11destination2of8VertexIdQz04EdgeK0Qz_tF":{"name":"destination(of:)","abstract":"<p>Returns the destination of <code>edge</code>.</p>","parent_name":"ParallelGraphAlgorithmContext"},"Structs/SequentialMailboxes/Mailbox.html#/s:17PenguinStructures19SequentialMailboxesV7MailboxV5inboxxSgvp":{"name":"inbox","abstract":"<p>The incoming message.</p>","parent_name":"Mailbox"},"Structs/SequentialMailboxes/Mailbox.html#/s:17PenguinStructures19SequentialMailboxesV7MailboxV4send_2toyx_8VertexIdQy_tF":{"name":"send(_:to:)","abstract":"<p>Sends <code>message</code> to <code>vertex</code> next step.</p>","parent_name":"Mailbox"},"Structs/SequentialMailboxes.html#/s:17PenguinStructures19SequentialMailboxesV11vertexCountACyxq_GSi_tcfc":{"name":"init(vertexCount:)","abstract":"<p>Initializes <code>self</code> for a given graph size.</p>","parent_name":"SequentialMailboxes"},"Structs/SequentialMailboxes/Mailbox.html":{"name":"Mailbox","abstract":"<p>A mailbox that merges messages together.</p>","parent_name":"SequentialMailboxes"},"Structs/SequentialMailboxes.html#/s:17PenguinStructures19SequentialMailboxesV7deliverSbyF":{"name":"deliver()","abstract":"<p>Transfers messages that were previously sent into the inboxes of the verticies.</p>","parent_name":"SequentialMailboxes"},"Structs/SequentialMailboxes.html#/s:17PenguinStructures19SequentialMailboxesV11withMailbox3for_y8VertexIdQy__yAC0F0Vyxq__GzKXEtKF":{"name":"withMailbox(for:_:)","abstract":"<p>Executes <code>fn</code> passing in the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/SequentialMailboxes/Mailbox.html\">Mailbox</a></code> for <code>vertex</code>.</p>","parent_name":"SequentialMailboxes"},"Structs/SequentialMailboxes.html#/s:17PenguinStructures19SequentialMailboxesVA2A15VertexListGraphR_rlE3for7sendingACyxq_Gq_h_xmtcfc":{"name":"init(for:sending:)","abstract":"<p>Initialize mailboxes for <code>graph</code> for <code>messageType</code> messages.</p>","parent_name":"SequentialMailboxes"},"Structs/Empty.html#/s:17PenguinStructures20DefaultInitializablePxycfc":{"name":"init()","parent_name":"Empty"},"Structs/Empty.html":{"name":"Empty","abstract":"<p>Undocumented</p>"},"Structs/SequentialMailboxes.html":{"name":"SequentialMailboxes","abstract":"<p>A non-concurrent table-based mailbox implementation.</p>"},"Structs/ParallelGraphAlgorithmContext.html":{"name":"ParallelGraphAlgorithmContext","abstract":"<p>Context provided to the function that is invoked on a per-vertex basis.</p>"},"Protocols/DefaultInitializable.html#/s:17PenguinStructures20DefaultInitializablePxycfc":{"name":"init()","abstract":"<p>Initialize <code>self</code> with default values. <code>self</code> must be in a valid (but unspecified) state.</p>","parent_name":"DefaultInitializable"},"Protocols/DefaultInitializable.html":{"name":"DefaultInitializable","abstract":"<p>A type is <code>DefaultInitializable</code> as long as it can be initialized with no parameters.</p>"},"Extensions/Double.html#/s:17PenguinStructures20GraphDistanceMeasureP17effectiveInfinityxvpZ":{"name":"effectiveInfinity","parent_name":"Double"},"Extensions/Float.html#/s:17PenguinStructures20GraphDistanceMeasureP17effectiveInfinityxvpZ":{"name":"effectiveInfinity","parent_name":"Float"},"Extensions/Int32.html#/s:17PenguinStructures20GraphDistanceMeasureP17effectiveInfinityxvpZ":{"name":"effectiveInfinity","parent_name":"Int32"},"Extensions/Int.html#/s:17PenguinStructures20GraphDistanceMeasureP17effectiveInfinityxvpZ":{"name":"effectiveInfinity","parent_name":"Int"},"Extensions/Int.html":{"name":"Int"},"Extensions/Int32.html":{"name":"Int32"},"Extensions/Float.html":{"name":"Float"},"Extensions/Double.html":{"name":"Double"},"Classes/PerThreadMailboxes/Mailbox.html#/s:17PenguinStructures18PerThreadMailboxesC7MailboxV5inboxxSgvp":{"name":"inbox","abstract":"<p>The incoming message.</p>","parent_name":"Mailbox"},"Classes/PerThreadMailboxes/Mailbox.html#/s:17PenguinStructures18PerThreadMailboxesC7MailboxV4send_2toyx_8VertexIdQy_tF":{"name":"send(_:to:)","abstract":"<p>Sends <code>message</code> to <code>vertex</code> next step.</p>","parent_name":"Mailbox"},"Classes/PerThreadMailboxes.html#/s:17PenguinStructures18PerThreadMailboxesC11vertexCount06threadG0ACyxq_GSi_Sitcfc":{"name":"init(vertexCount:threadCount:)","abstract":"<p>Initializes <code>self</code> for a given graph size.</p>","parent_name":"PerThreadMailboxes"},"Classes/PerThreadMailboxes/Mailbox.html":{"name":"Mailbox","abstract":"<p>A mailbox that merges messages together.</p>","parent_name":"PerThreadMailboxes"},"Classes/PerThreadMailboxes.html#/s:17PenguinStructures18PerThreadMailboxesC7deliverSbyF":{"name":"deliver()","abstract":"<p>Transfers messages that were previously sent into the inboxes of the verticies.</p>","parent_name":"PerThreadMailboxes"},"Classes/PerThreadMailboxes.html#/s:17PenguinStructures18PerThreadMailboxesC11withMailbox3for_y8VertexIdQy__yAC0G0Vyxq__GzKXEtKF":{"name":"withMailbox(for:_:)","abstract":"<p>Executes <code>fn</code> passing in the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/PerThreadMailboxes/Mailbox.html\">Mailbox</a></code> for <code>vertex</code>.</p>","parent_name":"PerThreadMailboxes"},"Classes/PerThreadMailboxes.html#/s:17PenguinStructures18PerThreadMailboxesCA2A15VertexListGraphR_rlE3for7sendingACyxq_Gq_h_xmtcfc":{"name":"init(for:sending:)","abstract":"<p>Initialize mailboxes for <code>graph</code> for <code>messageType</code> messages.</p>","parent_name":"PerThreadMailboxes"},"Classes/PerThreadMailboxes.html":{"name":"PerThreadMailboxes","abstract":"<p>Mailboxes that allow communication without synchronization.</p>"},"Structs/_IdIndexibleDictionaryHeapIndexer.html#/s:17PenguinStructures33_IdIndexibleDictionaryHeapIndexerVACyxq_Gycfc":{"name":"init()","abstract":"<p>Initializes an empty heap indexer.</p>","parent_name":"_IdIndexibleDictionaryHeapIndexer"},"Structs/_IdIndexibleDictionaryHeapIndexer.html#/s:17PenguinStructures33_IdIndexibleDictionaryHeapIndexerVyq_Sgxcip":{"name":"subscript(_:)","abstract":"<p>Indexing operations.</p>","parent_name":"_IdIndexibleDictionaryHeapIndexer"},"Structs/_DictionaryHeapIndexer.html#/s:17PenguinStructures22_DictionaryHeapIndexerVACyxq_Gycfc":{"name":"init()","abstract":"<p>Initializes an empty dictionary heap indexer.</p>","parent_name":"_DictionaryHeapIndexer"},"Structs/_DictionaryHeapIndexer.html#/s:17PenguinStructures22_DictionaryHeapIndexerVyq_Sgxcip":{"name":"subscript(_:)","abstract":"<p>Indexing opreations.</p>","parent_name":"_DictionaryHeapIndexer"},"Structs/_NullHeapIndexer.html#/s:17PenguinStructures16_NullHeapIndexerVACyxq_Gycfc":{"name":"init()","abstract":"<p>Initialize an empty <code>self</code>.</p>","parent_name":"_NullHeapIndexer"},"Structs/_NullHeapIndexer.html#/s:17PenguinStructures16_NullHeapIndexerVyq_Sgxcip":{"name":"subscript(_:)","abstract":"<p>No-op indexing operations.</p>","parent_name":"_NullHeapIndexer"},"Protocols/_ConfigurableHeapIndexerProtocol.html#/s:17PenguinStructures32_ConfigurableHeapIndexerProtocolP7ElementQa":{"name":"Element","abstract":"<p>The elements contained within the Heap.</p>","parent_name":"_ConfigurableHeapIndexerProtocol"},"Protocols/_ConfigurableHeapIndexerProtocol.html#/s:17PenguinStructures32_ConfigurableHeapIndexerProtocolP5IndexQa":{"name":"Index","abstract":"<p>The index type to refer to where in the heap&rsquo;s internal data structure the element exists.</p>","parent_name":"_ConfigurableHeapIndexerProtocol"},"Protocols/_ConfigurableHeapIndexerProtocol.html#/s:17PenguinStructures32_ConfigurableHeapIndexerProtocolPy5IndexQzSg7ElementQzcip":{"name":"subscript(_:)","abstract":"<p>Maps from element to location within the data structure; if <code>newValue</code> is <code>nil</code>, removes","parent_name":"_ConfigurableHeapIndexerProtocol"},"Configurable%20Heap%20Internal%20Types.html#/s:17PenguinStructures24_ConfigurableHeapIndexerP":{"name":"_ConfigurableHeapIndexer","abstract":"<p>Represents <code>get</code> and <code>set</code> for <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/_ConfigurableHeapIndexerProtocol.html\">_ConfigurableHeapIndexerProtocol</a></code>.</p>"},"Protocols/_ConfigurableHeapIndexerProtocol.html":{"name":"_ConfigurableHeapIndexerProtocol","abstract":"<p>Indexes a heap data structure for efficient modification of element priority.</p>"},"Structs/_NullHeapIndexer.html":{"name":"_NullHeapIndexer","abstract":"<p>No-op index for a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/ConfigurableHeap.html\">ConfigurableHeap</a></code>.</p>"},"Structs/_DictionaryHeapIndexer.html":{"name":"_DictionaryHeapIndexer","abstract":"<p>Indexes a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/ConfigurableHeap.html\">ConfigurableHeap</a></code> of <code>Element</code>s.</p>"},"Structs/_IdIndexibleDictionaryHeapIndexer.html":{"name":"_IdIndexibleDictionaryHeapIndexer","abstract":"<p>Indexes a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/ConfigurableHeap.html\">ConfigurableHeap</a></code> of <code>Element</code>s, so long as the element is <code>IdIndexible</code>.</p>"},"Configurable%20Heap%20Internal%20Types.html#/s:17PenguinStructures23_ConfigurableHeapCursorV":{"name":"_ConfigurableHeapCursor","abstract":"<p>A logical pointer into <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/ConfigurableHeap.html\">ConfigurableHeap</a></code>&lsquo;s internal data structures.</p>"},"Structs/InternalEdgePropertyMap.html#/s:17PenguinStructures23InternalEdgePropertyMapV7keyPathq0_vp":{"name":"keyPath","abstract":"<p>The KeyPath between <code>Graph.Edge</code> and <code>Value</code>.</p>","parent_name":"InternalEdgePropertyMap"},"Structs/InternalEdgePropertyMap.html#/s:17PenguinStructures23InternalEdgePropertyMapV_2onACyxq_q0_Gq0__xhtcfc":{"name":"init(_:on:)","abstract":"<p>Initialize an <code>InternalEdgePropertyMap</code> from the given <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/InternalEdgePropertyMap.html#/s:17PenguinStructures23InternalEdgePropertyMapV7keyPathq0_vp\">keyPath</a></code>.</p>","parent_name":"InternalEdgePropertyMap"},"Structs/InternalEdgePropertyMap.html#/s:17PenguinStructures23InternalEdgePropertyMapVyACyxq_q0_Gq0_cfc":{"name":"init(_:)","abstract":"<p>Initialize an <code>InternalEdgePropertyMap</code> from the given <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/InternalEdgePropertyMap.html#/s:17PenguinStructures23InternalEdgePropertyMapV7keyPathq0_vp\">keyPath</a></code>.</p>","parent_name":"InternalEdgePropertyMap"},"Structs/InternalEdgePropertyMap.html#/s:17PenguinStructures20GraphEdgePropertyMapP3gety5ValueQz0C0Qz_AG_0D2IdQZtF":{"name":"get(_:_:)","parent_name":"InternalEdgePropertyMap"},"Structs/InternalVertexPropertyMap.html#/s:17PenguinStructures25InternalVertexPropertyMapV7keyPathq0_vp":{"name":"keyPath","abstract":"<p>The KeyPath between the <code>Graph.Vertex</code> and the <code>Value</code> reterned by the property map.</p>","parent_name":"InternalVertexPropertyMap"},"Structs/InternalVertexPropertyMap.html#/s:17PenguinStructures25InternalVertexPropertyMapV_2onACyxq_q0_Gq0__xhtcfc":{"name":"init(_:on:)","abstract":"<p>Create an <code>InternalVertexPropertyMap</code> for a given keyPath <code>Path</code>.</p>","parent_name":"InternalVertexPropertyMap"},"Structs/InternalVertexPropertyMap.html#/s:17PenguinStructures25InternalVertexPropertyMapVyACyxq_q0_Gq0_cfc":{"name":"init(_:)","abstract":"<p>Initialize an <code>InternalVertexPropertyMap</code> from the given key path.</p>","parent_name":"InternalVertexPropertyMap"},"Structs/InternalVertexPropertyMap.html#/s:17PenguinStructures25InternalVertexPropertyMapV3getyq_x_0D2IdQztF":{"name":"get(_:_:)","abstract":"<p>Retrieves the property value from <code>graph</code> for <code>vertex</code>.</p>","parent_name":"InternalVertexPropertyMap"},"Protocols/MutablePropertyGraph.html#/s:17PenguinStructures20MutablePropertyGraphP9addVertex4with0G2IdQz0G0Qz_tF":{"name":"addVertex(with:)","abstract":"<p>Adds a vertex to the graph.</p>","parent_name":"MutablePropertyGraph"},"Protocols/MutablePropertyGraph.html#/s:17PenguinStructures20MutablePropertyGraphP7addEdge4from2to4with0G2IdQz06VertexK0Qz_AK0G0QztF":{"name":"addEdge(from:to:with:)","abstract":"<p>Adds an edge to the graph.</p>","parent_name":"MutablePropertyGraph"},"Protocols/MutablePropertyGraph.html#/s:17PenguinStructures20MutablePropertyGraphPAAE9addVertex0G2IdQzyF":{"name":"addVertex()","abstract":"<p>Adds a new vertex to the graph, with a default initialized <code>Vertex</code>.</p>","parent_name":"MutablePropertyGraph"},"Protocols/MutablePropertyGraph.html#/s:17PenguinStructures20MutablePropertyGraphPAAE7addEdge4from2to0G2IdQz06VertexJ0Qz_AJtF":{"name":"addEdge(from:to:)","abstract":"<p>Adds an edge from <code>source</code> to <code>destination</code> with a default initialized <code>Edge</code>.</p>","parent_name":"MutablePropertyGraph"},"Protocols/PropertyGraph.html#/s:17PenguinStructures13PropertyGraphP6VertexQa":{"name":"Vertex","abstract":"<p>The extra information associated with each vertex.</p>","parent_name":"PropertyGraph"},"Protocols/PropertyGraph.html#/s:17PenguinStructures13PropertyGraphP4EdgeQa":{"name":"Edge","abstract":"<p>The extra information associated with each edge.</p>","parent_name":"PropertyGraph"},"Protocols/PropertyGraph.html#/s:17PenguinStructures13PropertyGraphP6vertex6VertexQz0F2IdQz_tcip":{"name":"subscript(vertex:)","abstract":"<p>Access information associated with a given <code>VertexId</code>.</p>","parent_name":"PropertyGraph"},"Protocols/PropertyGraph.html#/s:17PenguinStructures13PropertyGraphP6vertex_qd__8VertexIdQz_s7KeyPathCy0F0Qzqd__Gtcluip":{"name":"subscript(vertex:_:)","abstract":"<p>Access a property related to a given vertex.</p>","parent_name":"PropertyGraph"},"Protocols/PropertyGraph.html#/s:17PenguinStructures13PropertyGraphP4edge4EdgeQz0F2IdQz_tcip":{"name":"subscript(edge:)","abstract":"<p>Access information associated with a given <code>EdgeId</code>.</p>","parent_name":"PropertyGraph"},"Protocols/PropertyGraph.html#/s:17PenguinStructures13PropertyGraphP4edge_qd__6EdgeIdQz_s7KeyPathCy0F0Qzqd__Gtcluip":{"name":"subscript(edge:_:)","abstract":"<p>Access a property for a given edge.</p>","parent_name":"PropertyGraph"},"Structs/DictionaryEdgePropertyMap.html#/s:17PenguinStructures25DictionaryEdgePropertyMapVyACyxq_GSDy0D2IdQzq_Gcfc":{"name":"init(_:)","abstract":"<p>Initialize <code>self</code> providing <code>values</code> for each edge.</p>","parent_name":"DictionaryEdgePropertyMap"},"Structs/DictionaryEdgePropertyMap.html#/s:17PenguinStructures25DictionaryEdgePropertyMapV3getyq_x_0D2IdQztF":{"name":"get(_:_:)","abstract":"<p>Retrieves the value for <code>edge</code> in <code>graph</code>.</p>","parent_name":"DictionaryEdgePropertyMap"},"Structs/DictionaryEdgePropertyMap.html#/s:17PenguinStructures25DictionaryEdgePropertyMapV3set4edge2in2toy0D2IdQz_xzq_tF":{"name":"set(edge:in:to:)","abstract":"<p>Sets <code>edge</code> in <code>graph</code> to <code>value</code>.</p>","parent_name":"DictionaryEdgePropertyMap"},"Structs/DictionaryEdgePropertyMap.html#/s:17PenguinStructures25DictionaryEdgePropertyMapV_3forACyxq_GSDy0D2IdQzq_G_xhtcfc":{"name":"init(_:for:)","abstract":"<p>Initializes <code>self</code> using <code>values</code>; <code>graph</code> is unused, but helps type inference along nicely.</p>","parent_name":"DictionaryEdgePropertyMap"},"Structs/TableVertexPropertyMap.html#/s:17PenguinStructures22TableVertexPropertyMapV9repeating5countACyxq_Gq__Sitcfc":{"name":"init(repeating:count:)","abstract":"<p>Creates an instance where every vertex has value <code>initialValue</code>.</p>","parent_name":"TableVertexPropertyMap"},"Structs/TableVertexPropertyMap.html#/s:17PenguinStructures22TableVertexPropertyMapVyACyxq_GSayq_Gcfc":{"name":"init(_:)","abstract":"<p>Creates an instance with <code>values</code>, indexed by the Graph&rsquo;s vertex indicies.</p>","parent_name":"TableVertexPropertyMap"},"Structs/TableVertexPropertyMap.html#/s:17PenguinStructures22TableVertexPropertyMapV3getyq_x_0D2IdQztF":{"name":"get(_:_:)","abstract":"<p>Retrieves the <code>Value</code> associated with vertex <code>vertex</code> in <code>graph</code>.</p>","parent_name":"TableVertexPropertyMap"},"Structs/TableVertexPropertyMap.html#/s:17PenguinStructures22TableVertexPropertyMapV3set6vertex2in2toy0D2IdQz_xzq_tF":{"name":"set(vertex:in:to:)","abstract":"<p>Sets the property on <code>vertex</code> to <code>value</code>.</p>","parent_name":"TableVertexPropertyMap"},"Structs/TableVertexPropertyMap.html#/s:17PenguinStructures22TableVertexPropertyMapVA2A0D9ListGraphRzrlE9repeating3forACyxq_Gq__xhtcfc":{"name":"init(repeating:for:)","abstract":"<p>Creates an instance where every vertex has <code>initialValue</code> for use with <code>graph</code>.</p>","parent_name":"TableVertexPropertyMap"},"Structs/TableVertexPropertyMap.html#/s:17PenguinStructures22TableVertexPropertyMapVA2A0D9ListGraphRzrlE_3forACyxq_GSayq_G_xhtcfc":{"name":"init(_:for:)","abstract":"<p>Creates an instance where the verticies have values <code>values</code>.</p>","parent_name":"TableVertexPropertyMap"},"Structs/TableVertexPropertyMap.html#/s:17PenguinStructures22TableVertexPropertyMapVA2A20DefaultInitializableR_rlE5countACyxq_GSi_tcfc":{"name":"init(count:)","abstract":"<p>Initializes <code>self</code> with the default value for <code>count</code> verticies.</p>","parent_name":"TableVertexPropertyMap"},"Protocols/MutableGraphEdgePropertyMap.html#/s:17PenguinStructures27MutableGraphEdgePropertyMapP3set4edge2in2toy0D0_0E2IdQZ_AHQzz5ValueQztF":{"name":"set(edge:in:to:)","abstract":"<p>Sets the property on <code>edge</code> to <code>value</code>.</p>","parent_name":"MutableGraphEdgePropertyMap"},"Protocols/GraphEdgePropertyMap.html#/s:17PenguinStructures20GraphEdgePropertyMapP0C0Qa":{"name":"Graph","abstract":"<p>The graph this PropertyMap operates on.</p>","parent_name":"GraphEdgePropertyMap"},"Protocols/GraphEdgePropertyMap.html#/s:17PenguinStructures20GraphEdgePropertyMapP5ValueQa":{"name":"Value","abstract":"<p>The data associated with each edge by this map.</p>","parent_name":"GraphEdgePropertyMap"},"Protocols/GraphEdgePropertyMap.html#/s:17PenguinStructures20GraphEdgePropertyMapP3gety5ValueQz0C0Qz_AG_0D2IdQZtF":{"name":"get(_:_:)","abstract":"<p>Retrieves the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/GraphEdgePropertyMap.html#/s:17PenguinStructures20GraphEdgePropertyMapP5ValueQa\">Value</a></code> associated with edge <code>edge</code> in <code>graph</code>.</p>","parent_name":"GraphEdgePropertyMap"},"Protocols/MutableGraphVertexPropertyMap.html#/s:17PenguinStructures29MutableGraphVertexPropertyMapP3set6vertex2in2toy0D0_0E2IdQZ_AHQzz5ValueQztF":{"name":"set(vertex:in:to:)","abstract":"<p>Sets the property on <code>vertex</code> to <code>value</code>.</p>","parent_name":"MutableGraphVertexPropertyMap"},"Protocols/GraphVertexPropertyMap.html#/s:17PenguinStructures22GraphVertexPropertyMapP0C0Qa":{"name":"Graph","abstract":"<p>The Graph this PropertyMap operates on.</p>","parent_name":"GraphVertexPropertyMap"},"Protocols/GraphVertexPropertyMap.html#/s:17PenguinStructures22GraphVertexPropertyMapP5ValueQa":{"name":"Value","abstract":"<p>The data associated with each vertex by this map.</p>","parent_name":"GraphVertexPropertyMap"},"Protocols/GraphVertexPropertyMap.html#/s:17PenguinStructures22GraphVertexPropertyMapP3gety5ValueQz0C0Qz_AG_0D2IdQZtF":{"name":"get(_:_:)","abstract":"<p>Retrieves the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/GraphVertexPropertyMap.html#/s:17PenguinStructures22GraphVertexPropertyMapP5ValueQa\">Value</a></code> associated with vertex <code>vertex</code> in <code>graph</code>.</p>","parent_name":"GraphVertexPropertyMap"},"Protocols/GraphVertexPropertyMap.html":{"name":"GraphVertexPropertyMap","abstract":"<p>Maps a <code>VertexId</code> from a Graph to a property of type <code>Value</code> associated with that <code>VertexId</code>.</p>"},"Protocols/MutableGraphVertexPropertyMap.html":{"name":"MutableGraphVertexPropertyMap","abstract":"<p>Allows modifying the associated vertex data.</p>"},"Protocols/GraphEdgePropertyMap.html":{"name":"GraphEdgePropertyMap","abstract":"<p>Maps an <code>EdgeId</code> from a Graph to a property of type <code>Value</code> associated with that <code>EdgeId</code>.</p>"},"Protocols/MutableGraphEdgePropertyMap.html":{"name":"MutableGraphEdgePropertyMap","abstract":"<p>Allows modifying the associated edge data.</p>"},"Structs/TableVertexPropertyMap.html":{"name":"TableVertexPropertyMap","abstract":"<p>A table-based vertex property map.</p>"},"Protocols/IdIndexable.html":{"name":"IdIndexable","abstract":"<p>An ID that can also be used as an index into a dense, contiguous array.</p>"},"Structs/DictionaryEdgePropertyMap.html":{"name":"DictionaryEdgePropertyMap","abstract":"<p>An external property map backed by a dictionary.</p>"},"Protocols/PropertyGraph.html":{"name":"PropertyGraph","abstract":"<p>A <code>PropertyGraph</code> stores additional information along with the graph structure.</p>"},"Protocols/MutablePropertyGraph.html":{"name":"MutablePropertyGraph","abstract":"<p>A <code>MutablePropertyGraph</code> keeps track of additional metadata for each vertex and edge.</p>"},"Structs/InternalVertexPropertyMap.html":{"name":"InternalVertexPropertyMap","abstract":"<p>Defines a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/GraphVertexPropertyMap.html\">GraphVertexPropertyMap</a></code> exposing properties stored in the vertex type of the graph.</p>"},"Structs/InternalEdgePropertyMap.html":{"name":"InternalEdgePropertyMap","abstract":"<p>Defines a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/GraphEdgePropertyMap.html\">GraphEdgePropertyMap</a></code> exposing properties stored in the edge type of the graph.</p>"},"Structs/PropertyAdjacencyList.html#/s:17PenguinStructures21PropertyAdjacencyListV8VertexIda":{"name":"VertexId","abstract":"<p>A handle to refer to a vertex in the graph.</p>","parent_name":"PropertyAdjacencyList"},"Structs/PropertyAdjacencyList.html#/s:17PenguinStructures21PropertyAdjacencyListV6EdgeIda":{"name":"EdgeId","abstract":"<p>A handle to refer to an edge in the graph.</p>","parent_name":"PropertyAdjacencyList"},"Structs/PropertyAdjacencyList.html#/s:17PenguinStructures21PropertyAdjacencyListVACyxq_q0_Gycfc":{"name":"init()","abstract":"<p>Initialize an empty PropertyAdjacencyList.</p>","parent_name":"PropertyAdjacencyList"},"Structs/PropertyAdjacencyList.html#/s:17PenguinStructures15VertexListGraphP11vertexCountSivp":{"name":"vertexCount","parent_name":"PropertyAdjacencyList"},"Structs/PropertyAdjacencyList.html#/s:17PenguinStructures15VertexListGraphP8vertices0C10CollectionQzyF":{"name":"vertices()","parent_name":"PropertyAdjacencyList"},"Structs/PropertyAdjacencyList.html#/s:17PenguinStructures13EdgeListGraphP9edgeCountSivp":{"name":"edgeCount","parent_name":"PropertyAdjacencyList"},"Structs/PropertyAdjacencyList.html#/s:17PenguinStructures13EdgeListGraphP5edges0C10CollectionQzyF":{"name":"edges()","parent_name":"PropertyAdjacencyList"},"Structs/PropertyAdjacencyList.html#/s:17PenguinStructures13EdgeListGraphP6source2of8VertexIdQz0cI0Qz_tF":{"name":"source(of:)","parent_name":"PropertyAdjacencyList"},"Structs/PropertyAdjacencyList.html#/s:17PenguinStructures13EdgeListGraphP11destination2of8VertexIdQz0cI0Qz_tF":{"name":"destination(of:)","parent_name":"PropertyAdjacencyList"},"Structs/PropertyAdjacencyList.html#/s:17PenguinStructures12MutableGraphP10removeEdge4from2toy8VertexIdQz_AHtKF":{"name":"removeEdge(from:to:)","parent_name":"PropertyAdjacencyList"},"Structs/PropertyAdjacencyList.html#/s:17PenguinStructures12MutableGraphP6remove4edgey6EdgeIdQz_tF":{"name":"remove(edge:)","parent_name":"PropertyAdjacencyList"},"Structs/PropertyAdjacencyList.html#/s:17PenguinStructures12MutableGraphP11removeEdgesyySb6EdgeIdQzKXEKF":{"name":"removeEdges(_:)","parent_name":"PropertyAdjacencyList"},"Structs/PropertyAdjacencyList.html#/s:17PenguinStructures12MutableGraphP11removeEdges4from_y8VertexIdQz_Sb04EdgeI0QzKXEtKF":{"name":"removeEdges(from:_:)","parent_name":"PropertyAdjacencyList"},"Structs/PropertyAdjacencyList.html#/s:17PenguinStructures12MutableGraphP5clear6vertexy8VertexIdQz_tF":{"name":"clear(vertex:)","parent_name":"PropertyAdjacencyList"},"Structs/PropertyAdjacencyList.html#/s:17PenguinStructures12MutableGraphP6remove6vertexy8VertexIdQz_tF":{"name":"remove(vertex:)","parent_name":"PropertyAdjacencyList"},"Structs/PropertyAdjacencyList.html#/s:17PenguinStructures21PropertyAdjacencyListV6vertexxAA0dE0V8VertexIdVyq0__G_tcip":{"name":"subscript(vertex:)","abstract":"<p>Access information associated with a given <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/PropertyAdjacencyList.html#/s:17PenguinStructures21PropertyAdjacencyListV8VertexIda\">VertexId</a></code>.</p>","parent_name":"PropertyAdjacencyList"},"Structs/PropertyAdjacencyList.html#/s:17PenguinStructures13PropertyGraphP6vertex_qd__8VertexIdQz_s7KeyPathCy0F0Qzqd__Gtcluip":{"name":"subscript(vertex:_:)","parent_name":"PropertyAdjacencyList"},"Structs/PropertyAdjacencyList.html#/s:17PenguinStructures13PropertyGraphP4edge4EdgeQz0F2IdQz_tcip":{"name":"subscript(edge:)","parent_name":"PropertyAdjacencyList"},"Structs/PropertyAdjacencyList.html#/s:17PenguinStructures13PropertyGraphP4edge_qd__6EdgeIdQz_s7KeyPathCy0F0Qzqd__Gtcluip":{"name":"subscript(edge:_:)","parent_name":"PropertyAdjacencyList"},"Structs/PropertyAdjacencyList.html#/s:17PenguinStructures20MutablePropertyGraphP9addVertex4with0G2IdQz0G0Qz_tF":{"name":"addVertex(with:)","parent_name":"PropertyAdjacencyList"},"Structs/PropertyAdjacencyList.html#/s:17PenguinStructures20MutablePropertyGraphP7addEdge4from2to4with0G2IdQz06VertexK0Qz_AK0G0QztF":{"name":"addEdge(from:to:with:)","parent_name":"PropertyAdjacencyList"},"Structs/PropertyAdjacencyList.html#/s:17PenguinStructures14IncidenceGraphP20VertexEdgeCollectionQa":{"name":"VertexEdgeCollection","parent_name":"PropertyAdjacencyList"},"Structs/PropertyAdjacencyList.html#/s:17PenguinStructures14IncidenceGraphP5edges4from20VertexEdgeCollectionQz0G2IdQz_tF":{"name":"edges(from:)","parent_name":"PropertyAdjacencyList"},"Structs/PropertyAdjacencyList.html#/s:17PenguinStructures14IncidenceGraphP9outDegree2ofSi8VertexIdQz_tF":{"name":"outDegree(of:)","parent_name":"PropertyAdjacencyList"},"Structs/PropertyAdjacencyList.html#/s:17PenguinStructures13ParallelGraphP4step9mailboxes11globalState_qd_0_qd__z_qd_0_qd_0_SgAA0cD16AlgorithmContextVyx7MessageQyd__qd_0_7MailboxQyd__Gz_6VertexQzztKXEtK0D0Qyd__RszAA17MailboxesProtocolRd__AA20DefaultInitializableRd_0_AA09MergeableK0Rd_0_r0_lF":{"name":"step(mailboxes:globalState:_:)","parent_name":"PropertyAdjacencyList"},"Structs/PropertyAdjacencyList.html#/s:17PenguinStructures21PropertyAdjacencyListV12parallelStep9mailboxes11globalState_qd_0_qd__z_qd_0_qd_0_SgAA29ParallelGraphAlgorithmContextVyACyxq_q0_G7MessageQyd__qd_0_7MailboxQyd__Gz_xztKXEtKAA17MailboxesProtocolRd__AA20DefaultInitializableRd_0_AA09MergeableO0Rd_0_AJ0L0Rtd__r0_lF":{"name":"parallelStep(mailboxes:globalState:_:)","abstract":"<p>Executes <code>fn</code> in parallel across all vertices, using <code>mailboxes</code> and <code>globalState</code>; returns","parent_name":"PropertyAdjacencyList"},"Structs/PropertyAdjacencyList.html#/s:17PenguinStructures21PropertyAdjacencyListV14sequentialStep9mailboxes11globalState_qd_0_qd__z_qd_0_qd_0_SgAA29ParallelGraphAlgorithmContextVyACyxq_q0_G7MessageQyd__qd_0_7MailboxQyd__Gz_xztKXEtKAA17MailboxesProtocolRd__AA20DefaultInitializableRd_0_AA09MergeableO0Rd_0_AJ0L0Rtd__r0_lF":{"name":"sequentialStep(mailboxes:globalState:_:)","abstract":"<p>Executes <code>fn</code> across all vertices using only a single thread, using <code>mailboxes</code> and","parent_name":"PropertyAdjacencyList"},"Structs/PropertyAdjacencyList.html#/s:17PenguinStructures21PropertyAdjacencyListV14sequentialStep9mailboxes_yqd__z_yAA29ParallelGraphAlgorithmContextVyACyxq_q0_G7MessageQyd__AA014EmptyMergeableM0V7MailboxQyd__Gz_xztKXEtKAA17MailboxesProtocolRd__AH0J0Rtd__lF":{"name":"sequentialStep(mailboxes:_:)","abstract":"<p>Executes <code>fn</code> across all vertices using only a single thread using <code>mailboxes</code>.</p>","parent_name":"PropertyAdjacencyList"},"Structs/AdjacencyList/VertexEdgeCollection.html#/s:Sl10startIndex0B0Qzvp":{"name":"startIndex","parent_name":"VertexEdgeCollection"},"Structs/AdjacencyList/VertexEdgeCollection.html#/s:Sl8endIndex0B0Qzvp":{"name":"endIndex","parent_name":"VertexEdgeCollection"},"Structs/AdjacencyList/VertexEdgeCollection.html#/s:Sl5index5after5IndexQzAD_tF":{"name":"index(after:)","parent_name":"VertexEdgeCollection"},"Structs/AdjacencyList/VertexEdgeCollection.html#/s:Sly7ElementQz5IndexQzcip":{"name":"subscript(_:)","parent_name":"VertexEdgeCollection"},"Structs/AdjacencyList/EdgeCollection/Cursor.html#/s:SL1loiySbx_xtFZ":{"name":"<(_:_:)","parent_name":"Cursor"},"Structs/AdjacencyList/EdgeCollection/Cursor.html":{"name":"Cursor","parent_name":"EdgeCollection"},"Structs/AdjacencyList/EdgeCollection.html#/s:17PenguinStructures22HierarchicalCollectionP12forEachWhile10startingAt_6CursorQzSgAH_Sb7ElementQzKXEtKF":{"name":"forEachWhile(startingAt:_:)","parent_name":"EdgeCollection"},"Structs/AdjacencyList/EdgeCollection.html#/s:17PenguinStructures22HierarchicalCollectionP5countSivp":{"name":"count","parent_name":"EdgeCollection"},"Structs/AdjacencyList/VertexCollection.html#/s:17PenguinStructures22HierarchicalCollectionP12forEachWhile10startingAt_6CursorQzSgAH_Sb7ElementQzKXEtKF":{"name":"forEachWhile(startingAt:_:)","parent_name":"VertexCollection"},"Structs/AdjacencyList/VertexCollection.html#/s:17PenguinStructures22HierarchicalCollectionP5countSivp":{"name":"count","parent_name":"VertexCollection"},"Structs/AdjacencyList/EdgeId.html#/s:17PenguinStructures13AdjacencyListV6EdgeIdV11descriptionSSvp":{"name":"description","abstract":"<p>Pretty representation of an edge identifier.</p>","parent_name":"EdgeId"},"Structs/AdjacencyList/VertexId.html#/s:17PenguinStructures13AdjacencyListV8VertexIdV11descriptionSSvp":{"name":"description","abstract":"<p>Pretty representation of a vertex identifier.</p>","parent_name":"VertexId"},"Structs/AdjacencyList.html#/s:17PenguinStructures13AdjacencyListVACyxGycfc":{"name":"init()","abstract":"<p>Initialize an empty AdjacencyList.</p>","parent_name":"AdjacencyList"},"Structs/AdjacencyList/VertexId.html":{"name":"VertexId","abstract":"<p>The name of a vertex in this graph.</p>","parent_name":"AdjacencyList"},"Structs/AdjacencyList/EdgeId.html":{"name":"EdgeId","abstract":"<p>The name of an edge in this graph.</p>","parent_name":"AdjacencyList"},"Structs/AdjacencyList.html#/s:17PenguinStructures13AdjacencyListV7addEdge4from2toAC0F2IdVyx_GAC06VertexI0Vyx_G_ALtF":{"name":"addEdge(from:to:)","abstract":"<p>Adds an edge from <code>source</code> to <code>destination</code>.</p>","parent_name":"AdjacencyList"},"Structs/AdjacencyList.html#/s:17PenguinStructures13AdjacencyListV10removeEdge4from2toyAC8VertexIdVyx_G_AItKF":{"name":"removeEdge(from:to:)","abstract":"<p>Removes all edges from <code>u</code> to <code>v</code>.</p>","parent_name":"AdjacencyList"},"Structs/AdjacencyList.html#/s:17PenguinStructures13AdjacencyListV6remove4edgeyAC6EdgeIdVyx_G_tF":{"name":"remove(edge:)","abstract":"<p>Removes <code>edge</code>.</p>","parent_name":"AdjacencyList"},"Structs/AdjacencyList.html#/s:17PenguinStructures13AdjacencyListV11removeEdgesyySbAC6EdgeIdVyx_GKXEKF":{"name":"removeEdges(_:)","abstract":"<p>Removes all edges that satisfy <code>predicate</code>.</p>","parent_name":"AdjacencyList"},"Structs/AdjacencyList.html#/s:17PenguinStructures13AdjacencyListV11removeEdges4from_yAC8VertexIdVyx_G_SbAC04EdgeI0Vyx_GKXEtKF":{"name":"removeEdges(from:_:)","abstract":"<p>Remove all out edges of <code>vertex</code> that satisfy the given predicate.</p>","parent_name":"AdjacencyList"},"Structs/AdjacencyList.html#/s:17PenguinStructures13AdjacencyListV9addVertexAC0F2IdVyx_GyF":{"name":"addVertex()","abstract":"<p>Adds a new vertex, returning its identifier.</p>","parent_name":"AdjacencyList"},"Structs/AdjacencyList.html#/s:17PenguinStructures13AdjacencyListV5clear6vertexyAC8VertexIdVyx_G_tF":{"name":"clear(vertex:)","abstract":"<p>Removes all edges from <code>vertex</code>.</p>","parent_name":"AdjacencyList"},"Structs/AdjacencyList.html#/s:17PenguinStructures13AdjacencyListV6remove6vertexyAC8VertexIdVyx_G_tF":{"name":"remove(vertex:)","abstract":"<p>Removes <code>vertex</code> from the graph.</p>","parent_name":"AdjacencyList"},"Structs/AdjacencyList.html#/s:17PenguinStructures13AdjacencyListV11vertexCountSivp":{"name":"vertexCount","abstract":"<p>The number of vertices in the graph.</p>","parent_name":"AdjacencyList"},"Structs/AdjacencyList/VertexCollection.html":{"name":"VertexCollection","abstract":"<p>A collection of this graph&rsquo;s vertex identifiers.</p>","parent_name":"AdjacencyList"},"Structs/AdjacencyList.html#/s:17PenguinStructures13AdjacencyListV8verticesAC16VertexCollectionVyx_GyF":{"name":"vertices()","abstract":"<p>The identifiers of all vertices.</p>","parent_name":"AdjacencyList"},"Structs/AdjacencyList.html#/s:17PenguinStructures13AdjacencyListV9edgeCountSivp":{"name":"edgeCount","abstract":"<p>The number of edges.</p>","parent_name":"AdjacencyList"},"Structs/AdjacencyList/EdgeCollection.html":{"name":"EdgeCollection","abstract":"<p>A collection of all edge identifiers.</p>","parent_name":"AdjacencyList"},"Structs/AdjacencyList.html#/s:17PenguinStructures13AdjacencyListV5edgesAC14EdgeCollectionVyx_GyF":{"name":"edges()","abstract":"<p>Returns a collection of all edges.</p>","parent_name":"AdjacencyList"},"Structs/AdjacencyList.html#/s:17PenguinStructures13AdjacencyListV6source2ofAC8VertexIdVyx_GAC04EdgeH0Vyx_G_tF":{"name":"source(of:)","abstract":"<p>Returns the source vertex identifier of <code>edge</code>.</p>","parent_name":"AdjacencyList"},"Structs/AdjacencyList.html#/s:17PenguinStructures13AdjacencyListV11destination2ofAC8VertexIdVyx_GAC04EdgeH0Vyx_G_tF":{"name":"destination(of:)","abstract":"<p>Returns the destination vertex identifier of <code>edge</code>.</p>","parent_name":"AdjacencyList"},"Structs/AdjacencyList/VertexEdgeCollection.html":{"name":"VertexEdgeCollection","abstract":"<p><code>VertexEdgeCollection</code> represents a collection of vertices from a single source vertex.</p>","parent_name":"AdjacencyList"},"Structs/AdjacencyList.html#/s:17PenguinStructures13AdjacencyListV5edges4fromAC20VertexEdgeCollectionVyx_GAC0G2IdVyx_G_tF":{"name":"edges(from:)","abstract":"<p>Returns the collection of edges from <code>vertex</code>.</p>","parent_name":"AdjacencyList"},"Structs/AdjacencyList.html#/s:17PenguinStructures13AdjacencyListV9outDegree2ofSiAC8VertexIdVyx_G_tF":{"name":"outDegree(of:)","abstract":"<p>Returns the number of edges whose source is <code>vertex</code>.</p>","parent_name":"AdjacencyList"},"Structs/AdjacencyList.html":{"name":"AdjacencyList","abstract":"<p>The vertex/edge structure of an arbitrary <a href=\"https://en.wikipedia.org/wiki/Adjacency_list\">adjacency"},"Structs/PropertyAdjacencyList.html":{"name":"PropertyAdjacencyList","abstract":"<p>PropertyAdjacencyList is a general-purpose graph implementation with attached data to edges and"},"Structs/DistanceSearchMessage.html#/s:17PenguinStructures21DistanceSearchMessageV5merge4withyACyxq_G_tF":{"name":"merge(with:)","abstract":"<p>Merges <code>self</code> with <code>other</code>.</p>","parent_name":"DistanceSearchMessage"},"Protocols/ReachableVertex.html#/s:17PenguinStructures15ReachableVertexP02isC0Sbvp":{"name":"isReachable","abstract":"<p>Undocumented</p>","parent_name":"ReachableVertex"},"Protocols/DistanceVertex.html#/s:17PenguinStructures14DistanceVertexP0D2IdQa":{"name":"VertexId","abstract":"<p>A &ldquo;pointer&rdquo; to the parent in the search tree.</p>","parent_name":"DistanceVertex"},"Protocols/DistanceVertex.html#/s:17PenguinStructures14DistanceVertexP0C0Qa":{"name":"Distance","abstract":"<p>A measure of the distance within the graph.</p>","parent_name":"DistanceVertex"},"Protocols/DistanceVertex.html#/s:17PenguinStructures14DistanceVertexP8distance0C0Qzvp":{"name":"distance","abstract":"<p>The distance from the start vertex (verticies).</p>","parent_name":"DistanceVertex"},"Protocols/DistanceVertex.html#/s:17PenguinStructures14DistanceVertexP11predecessor0D2IdQzSgvp":{"name":"predecessor","abstract":"<p>The predecessor vertex.</p>","parent_name":"DistanceVertex"},"Protocols/DistanceEdge.html#/s:17PenguinStructures12DistanceEdgeP0C0Qa":{"name":"Distance","abstract":"<p>The distance measure for the edge.</p>","parent_name":"DistanceEdge"},"Protocols/DistanceEdge.html#/s:17PenguinStructures12DistanceEdgeP8distance0C0Qzvp":{"name":"distance","abstract":"<p>The distance cost for traversing this edge.</p>","parent_name":"DistanceEdge"},"Protocols/MailboxesProtocol.html#/s:17PenguinStructures17MailboxesProtocolP5GraphQa":{"name":"Graph","abstract":"<p>The graph this mailbox is working with.</p>","parent_name":"MailboxesProtocol"},"Protocols/MailboxesProtocol.html#/s:17PenguinStructures17MailboxesProtocolP7MessageQa":{"name":"Message","abstract":"<p>The type of messages being exchanged.</p>","parent_name":"MailboxesProtocol"},"Protocols/MailboxesProtocol.html#/s:17PenguinStructures17MailboxesProtocolP7MailboxQa":{"name":"Mailbox","abstract":"<p>The per-vertex representation of this communication abstraction.</p>","parent_name":"MailboxesProtocol"},"Protocols/MailboxesProtocol.html#/s:17PenguinStructures17MailboxesProtocolP7deliverSbyF":{"name":"deliver()","abstract":"<p>Transfers messages that were previously sent into the inboxes of the verticies; returns true","parent_name":"MailboxesProtocol"},"Protocols/MailboxesProtocol.html#/s:17PenguinStructures17MailboxesProtocolP11withMailbox3for_y5Graph_8VertexIdQZ_y0F0QzzKXEtKF":{"name":"withMailbox(for:_:)","abstract":"<p>Executes <code>fn</code> passing in the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/MailboxesProtocol.html#/s:17PenguinStructures17MailboxesProtocolP7MailboxQa\">Mailbox</a></code> for <code>vertex</code>.</p>","parent_name":"MailboxesProtocol"},"Protocols/MailboxProtocol.html#/s:17PenguinStructures15MailboxProtocolP7MessageQa":{"name":"Message","abstract":"<p>The type of messages being exchanged.</p>","parent_name":"MailboxProtocol"},"Protocols/MailboxProtocol.html#/s:17PenguinStructures15MailboxProtocolP5GraphQa":{"name":"Graph","abstract":"<p>The graph data structure being operated upon.</p>","parent_name":"MailboxProtocol"},"Protocols/MailboxProtocol.html#/s:17PenguinStructures15MailboxProtocolP5inbox7MessageQzSgvp":{"name":"inbox","abstract":"<p>The consolidated message</p>","parent_name":"MailboxProtocol"},"Protocols/MailboxProtocol.html#/s:17PenguinStructures15MailboxProtocolP4send_2toy7MessageQz_5Graph_8VertexIdQZtF":{"name":"send(_:to:)","abstract":"<p>Sends <code>message</code> to <code>vertex</code> (that will be received in the next super-step).</p>","parent_name":"MailboxProtocol"},"Structs/EmptyMergeableMessage.html#/s:17PenguinStructures20DefaultInitializablePxycfc":{"name":"init()","parent_name":"EmptyMergeableMessage"},"Structs/EmptyMergeableMessage.html#/s:17PenguinStructures16MergeableMessageP5merge4withyx_tF":{"name":"merge(with:)","parent_name":"EmptyMergeableMessage"},"Protocols/MergeableMessage.html#/s:17PenguinStructures16MergeableMessageP5merge4withyx_tF":{"name":"merge(with:)","abstract":"<p>Merges <code>other</code> into <code>self</code>.</p>","parent_name":"MergeableMessage"},"Protocols/ParallelGraph.html#/s:17PenguinStructures13ParallelGraphP7Contexta":{"name":"Context","abstract":"<p>The context that is passed to the vertex-parallel functions during execution.</p>","parent_name":"ParallelGraph"},"Protocols/ParallelGraph.html#/s:17PenguinStructures13ParallelGraphP06VertexC8Functiona":{"name":"VertexParallelFunction","abstract":"<p>The type of functions that can be executed in vertex-parallel fashion across the graph.</p>","parent_name":"ParallelGraph"},"Protocols/ParallelGraph.html#/s:17PenguinStructures13ParallelGraphP4step9mailboxes11globalState_qd_0_qd__z_qd_0_qd_0_SgAA0cD16AlgorithmContextVyx7MessageQyd__qd_0_7MailboxQyd__Gz_6VertexQzztKXEtK0D0Qyd__RszAA17MailboxesProtocolRd__AA20DefaultInitializableRd_0_AA09MergeableK0Rd_0_r0_lF":{"name":"step(mailboxes:globalState:_:)","abstract":"<p>Runs <code>fn</code> across each vertex delivering messages in <code>mailboxes</code>, making <code>globalState</code>","parent_name":"ParallelGraph"},"Protocols/ParallelGraph.html#/s:17PenguinStructures13ParallelGraphPAAE014NoGlobalVertexC8Functiona":{"name":"NoGlobalVertexParallelFunction","abstract":"<p>A per-vertex function that doesn&rsquo;t use global state.</p>","parent_name":"ParallelGraph"},"Protocols/ParallelGraph.html#/s:17PenguinStructures13ParallelGraphPAAE4step9mailboxes_yqd__z_yAA0cD16AlgorithmContextVyx7MessageQyd__AA014EmptyMergeableI0V7MailboxQyd__Gz_6VertexQzztKXEtK0D0Qyd__RszAA17MailboxesProtocolRd__lF":{"name":"step(mailboxes:_:)","abstract":"<p>Undocumented</p>","parent_name":"ParallelGraph"},"Protocols/ParallelGraph.html#/s:17PenguinStructures13ParallelGraphPA2A09IncidenceD0RzAA15ReachableVertex0G0AA08PropertyD0PRpzrlE24computeTransitiveClosure5usingSiqd__z_t0D0Qyd__RszAA17MailboxesProtocolRd__AA21EmptyMergeableMessageV0Q0Rtd__lF":{"name":"computeTransitiveClosure(using:)","abstract":"<p>Computes the transitive closure in parallel.</p>","parent_name":"ParallelGraph"},"Protocols/ParallelGraph.html#/s:17PenguinStructures13ParallelGraphPA2A09IncidenceD0RzAA14DistanceVertex0G0AA08PropertyD0PRpzAfH_0G2IdQZAjA0D8ProtocolPRtzrlE10computeBFS10startingAt5usingSiAN_qd_0_zt0D0Qyd_0_RszAA0dF7MeasureRd__AA09MailboxesJ0Rd_0_AA0F13SearchMessageVyANqd__G0S0Rtd_0_r0_lF":{"name":"computeBFS(startingAt:using:)","abstract":"<p>Executes breadth first search in parallel.</p>","parent_name":"ParallelGraph"},"Protocols/ParallelGraph.html#/s:17PenguinStructures13ParallelGraphPA2A09IncidenceD0RzAA14DistanceVertex0G0AA08PropertyD0PRpzAfH_0G2IdQZAjA0D8ProtocolPRtzrlE10computeBFS10startingAt5usingSiqd___qd_1_zt0D0Qyd_1_RszSlRd__AA0dF7MeasureRd_0_AA09MailboxesJ0Rd_1_7ElementQyd__ANRSAkWRSAA0F13SearchMessageVyANqd_0_G0T0Rtd_1_r1_lF":{"name":"computeBFS(startingAt:using:)","abstract":"<p>Executes breadth first search in parallel.</p>","parent_name":"ParallelGraph"},"Protocols/ParallelGraph.html#/s:17PenguinStructures13ParallelGraphPA2A09IncidenceD0RzAA14DistanceVertex0G0AA08PropertyD0PRpzAfH_0G2IdQZAjA0D8ProtocolPRtzrlE20computeShortestPaths10startingAt08stoppingO04with5using12maximumStepsSiAN_ANSgqd_1_qd_0_zSiSgt0D0Qyd_0_Rsz5ValueQyd_1_Rsd__AA09MailboxesJ0Rd_0_AA0d4EdgeH3MapRd_1_AWQyd_1_AXRSAA0F13SearchMessageVyANqd__G0Z0Rtd_0_AfH_0F0QZAZRSr1_lF":{"name":"computeShortestPaths(startingAt:stoppingAt:with:using:maximumSteps:)","abstract":"<p>Computes the shortest paths from <code>startVertex</code>.</p>","parent_name":"ParallelGraph"},"Protocols/ParallelGraph.html":{"name":"ParallelGraph","abstract":"<p>A graph that supports vertex-parallel graph algorithms.</p>"},"Protocols/MergeableMessage.html":{"name":"MergeableMessage","abstract":"<p>Represents the ability to consolidate two messages into a single message.</p>"},"Structs/EmptyMergeableMessage.html":{"name":"EmptyMergeableMessage","abstract":"<p>An empty, mergeable message that can be useful for signaling.</p>"},"Protocols/MailboxProtocol.html":{"name":"MailboxProtocol","abstract":"<p>Represents the per-vertex communication abstraction for vertex-parallel algorithms.</p>"},"Protocols/MailboxesProtocol.html":{"name":"MailboxesProtocol","abstract":"<p>Represents the computation-wide communication abstraction for vertex-parallel algorithms.</p>"},"Protocols/DistanceEdge.html":{"name":"DistanceEdge","abstract":"<p>An edge with associated distance.</p>"},"Protocols/DistanceVertex.html":{"name":"DistanceVertex","abstract":"<p>A vertex that can keep track of its distance from another point in the graph.</p>"},"Protocols/ReachableVertex.html":{"name":"ReachableVertex","abstract":"<p>A protocol for whether a vertex is reachable.</p>"},"Structs/DistanceSearchMessage.html":{"name":"DistanceSearchMessage","abstract":"<p>Messages used during parallel BFS and parallel shortest paths.</p>"},"Structs/TablePredecessorVisitor.html#/s:17PenguinStructures23TablePredecessorVisitorV12predecessorsSay8VertexIdQzSgGvp":{"name":"predecessors","abstract":"<p>A table of the predecessor for a vertex, organized by <code>Graph.VertexId.index</code>.</p>","parent_name":"TablePredecessorVisitor"},"Structs/TablePredecessorVisitor.html#/s:17PenguinStructures23TablePredecessorVisitorV11vertexCountACyxGSi_tcfc":{"name":"init(vertexCount:)","abstract":"<p>Creates a PredecessorVisitor for use on graph <code>Graph</code> with <code>vertexCount</code> verticies.</p>","parent_name":"TablePredecessorVisitor"},"Structs/TablePredecessorVisitor.html#/s:17PenguinStructures23TablePredecessorVisitorV8treeEdgeyy0G2IdQz_xztF":{"name":"treeEdge(_:_:)","abstract":"<p>Records the source of <code>edge</code> as being the predecessor of the destination of <code>edge</code>.</p>","parent_name":"TablePredecessorVisitor"},"Structs/TablePredecessorVisitor.html#/s:17PenguinStructures23TablePredecessorVisitorV11edgeRelaxedyy6EdgeIdQz_xztF":{"name":"edgeRelaxed(_:_:)","abstract":"<p>Records the source of <code>edge</code> as being the predecessor of the destination of <code>edge</code>.</p>","parent_name":"TablePredecessorVisitor"},"Structs/TablePredecessorVisitor.html#/s:17PenguinStructures23TablePredecessorVisitorVA2A15VertexListGraphRzrlE3forACyxGx_tcfc":{"name":"init(for:)","abstract":"<p>Creates a <code>PredecessorVisitor</code> for use on <code>graph</code>.</p>","parent_name":"TablePredecessorVisitor"},"Structs/VisitorChain.html#/s:17PenguinStructures12VisitorChainV4headq_vp":{"name":"head","abstract":"<p>The first visitor in the chain.</p>","parent_name":"VisitorChain"},"Structs/VisitorChain.html#/s:17PenguinStructures12VisitorChainV4tailq0_vp":{"name":"tail","abstract":"<p>The rest of the chain.</p>","parent_name":"VisitorChain"},"Structs/VisitorChain.html#/s:17PenguinStructures12VisitorChainVyACyxq_q0_Gq__q0_tcfc":{"name":"init(_:_:)","abstract":"<p>Builds a chain of <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/DFSVisitor.html\">DFSVisitor</a></code>s, composed of <code>Head</code>, and <code>Tail</code>.</p>","parent_name":"VisitorChain"},"Structs/VisitorChain.html#/s:17PenguinStructures12VisitorChainV8discover6vertex_y8VertexIdQz_xztKF":{"name":"discover(vertex:_:)","abstract":"<p><code>discover(vertex:_:)</code> is called upon first discovering <code>vertex</code> in the graph.</p>","parent_name":"VisitorChain"},"Structs/VisitorChain.html#/s:17PenguinStructures12VisitorChainV7examine6vertex_y8VertexIdQz_xztKF":{"name":"examine(vertex:_:)","abstract":"<p>Called when <code>vertex</code> is at the front of the queue and is examined.</p>","parent_name":"VisitorChain"},"Structs/VisitorChain.html#/s:17PenguinStructures12VisitorChainV7examine4edge_y6EdgeIdQz_xztKF":{"name":"examine(edge:_:)","abstract":"<p>Called for each edge associated with a freshly discovered vertex.</p>","parent_name":"VisitorChain"},"Structs/VisitorChain.html#/s:17PenguinStructures12VisitorChainV6finish6vertex_y8VertexIdQz_xztKF":{"name":"finish(vertex:_:)","abstract":"<p>Called once for each vertex right after it is colored black.</p>","parent_name":"VisitorChain"},"Structs/VisitorChain.html#/s:17PenguinStructures12VisitorChainVA2A010TreeSearchC0R_AaDR0_rlE5start6vertex_y8VertexIdQz_xztKF":{"name":"start(vertex:_:)","abstract":"<p><code>start(vertex:_:)</code> is called once for each start vertex.</p>","parent_name":"VisitorChain"},"Structs/VisitorChain.html#/s:17PenguinStructures12VisitorChainVA2A010TreeSearchC0R_AaDR0_rlE8treeEdgeyy0H2IdQz_xztKF":{"name":"treeEdge(_:_:)","abstract":"<p>Called for each edge that discovers a new vertex.</p>","parent_name":"VisitorChain"},"Structs/VisitorChain.html#/s:17PenguinStructures12VisitorChainVA2A10DFSVisitorR_AaDR0_rlE8backEdgeyy0G2IdQz_xztKF":{"name":"backEdge(_:_:)","abstract":"<p>Called for each back edge in the search tree.</p>","parent_name":"VisitorChain"},"Structs/VisitorChain.html#/s:17PenguinStructures12VisitorChainVA2A10DFSVisitorR_AaDR0_rlE18forwardOrCrossEdgeyy0I2IdQz_xztKF":{"name":"forwardOrCrossEdge(_:_:)","abstract":"<p>Called for edges that are forward or cross edges in the search tree.</p>","parent_name":"VisitorChain"},"Structs/VisitorChain.html#/s:17PenguinStructures12VisitorChainVA2A10BFSVisitorR_AaDR0_rlE9popVertex0G2IdQzSgyF":{"name":"popVertex()","abstract":"<p>Retrieves the next vertex to visit.</p>","parent_name":"VisitorChain"},"Structs/VisitorChain.html#/s:17PenguinStructures12VisitorChainVA2A10BFSVisitorR_AaDR0_rlE11nonTreeEdgeyy0H2IdQz_xztKF":{"name":"nonTreeEdge(_:_:)","abstract":"<p>Called for each non-tree edge encountered.</p>","parent_name":"VisitorChain"},"Structs/VisitorChain.html#/s:17PenguinStructures12VisitorChainVA2A10BFSVisitorR_AaDR0_rlE15grayDestinationyy6EdgeIdQz_xztKF":{"name":"grayDestination(_:_:)","abstract":"<p>Called for each edge with a gray destination</p>","parent_name":"VisitorChain"},"Structs/VisitorChain.html#/s:17PenguinStructures12VisitorChainVA2A10BFSVisitorR_AaDR0_rlE16blackDestinationyy6EdgeIdQz_xztKF":{"name":"blackDestination(_:_:)","abstract":"<p>Called for each edge with a black destination.</p>","parent_name":"VisitorChain"},"Structs/VisitorChain.html#/s:17PenguinStructures12VisitorChainVA2A08DijkstraC0R_AaDR0_rlE11edgeRelaxedyy6EdgeIdQz_xztKF":{"name":"edgeRelaxed(_:_:)","abstract":"<p>Called for each edge that results in a shorter path to its destination vertex.</p>","parent_name":"VisitorChain"},"Structs/VisitorChain.html#/s:17PenguinStructures12VisitorChainVA2A08DijkstraC0R_AaDR0_rlE14edgeNotRelaxedyy6EdgeIdQz_xztKF":{"name":"edgeNotRelaxed(_:_:)","abstract":"<p>Called for each edge that does not result in a shorter path to its destination vertex.</p>","parent_name":"VisitorChain"},"Structs/BFSQueueVisitor.html#/s:17PenguinStructures15BFSQueueVisitorVACyxGycfc":{"name":"init()","abstract":"<p>Initialize an empty <code>BFSQueueVisitor</code>.</p>","parent_name":"BFSQueueVisitor"},"Structs/BFSQueueVisitor.html#/s:17PenguinStructures15BFSQueueVisitorV8discover6vertex_y8VertexIdQz_xztF":{"name":"discover(vertex:_:)","abstract":"<p>Called upon first discovering <code>vertex</code> in the graph.</p>","parent_name":"BFSQueueVisitor"},"Structs/BFSQueueVisitor.html#/s:17PenguinStructures15BFSQueueVisitorV9popVertex0F2IdQzSgyF":{"name":"popVertex()","abstract":"<p>Retrieves the next vertex to visit.</p>","parent_name":"BFSQueueVisitor"},"Protocols/DijkstraVisitor.html#/s:17PenguinStructures15DijkstraVisitorP11edgeRelaxedyy5Graph_6EdgeIdQZ_AEQzztKF":{"name":"edgeRelaxed(_:_:)","abstract":"<p>Called for each edge that results in a shorter path to its destination vertex.</p>","parent_name":"DijkstraVisitor"},"Protocols/DijkstraVisitor.html#/s:17PenguinStructures15DijkstraVisitorP14edgeNotRelaxedyy5Graph_6EdgeIdQZ_AEQzztKF":{"name":"edgeNotRelaxed(_:_:)","abstract":"<p>Called for each edge that does not result in a shorter path to its destination vertex.</p>","parent_name":"DijkstraVisitor"},"Protocols/DFSVisitor.html#/s:17PenguinStructures10DFSVisitorP8backEdgeyy5Graph_0E2IdQZ_AEQzztKF":{"name":"backEdge(_:_:)","abstract":"<p>Called for each back edge in the search tree.</p>","parent_name":"DFSVisitor"},"Protocols/DFSVisitor.html#/s:17PenguinStructures10DFSVisitorP18forwardOrCrossEdgeyy5Graph_0G2IdQZ_AEQzztKF":{"name":"forwardOrCrossEdge(_:_:)","abstract":"<p>Called for edges that are forward or cross edges in the search tree.</p>","parent_name":"DFSVisitor"},"Protocols/BFSVisitor.html#/s:17PenguinStructures10BFSVisitorP9popVertex5Graph_0E2IdQZSgyF":{"name":"popVertex()","abstract":"<p>Retrieves the next vertex to visit.</p>","parent_name":"BFSVisitor"},"Protocols/BFSVisitor.html#/s:17PenguinStructures10BFSVisitorP11nonTreeEdgeyy5Graph_0F2IdQZ_AEQzztKF":{"name":"nonTreeEdge(_:_:)","abstract":"<p>Called for each non-tree edge encountered.</p>","parent_name":"BFSVisitor"},"Protocols/BFSVisitor.html#/s:17PenguinStructures10BFSVisitorP15grayDestinationyy5Graph_6EdgeIdQZ_AEQzztKF":{"name":"grayDestination(_:_:)","abstract":"<p>Called for each edge with a gray destination.</p>","parent_name":"BFSVisitor"},"Protocols/BFSVisitor.html#/s:17PenguinStructures10BFSVisitorP16blackDestinationyy5Graph_6EdgeIdQZ_AEQzztKF":{"name":"blackDestination(_:_:)","abstract":"<p>Called for each edge with a black destination.</p>","parent_name":"BFSVisitor"},"Protocols/TreeSearchVisitor.html#/s:17PenguinStructures17TreeSearchVisitorP5start6vertex_y5Graph_8VertexIdQZ_AFQzztKF":{"name":"start(vertex:_:)","abstract":"<p><code>start(vertex:_:)</code> is called once for each start vertex.</p>","parent_name":"TreeSearchVisitor"},"Protocols/TreeSearchVisitor.html#/s:17PenguinStructures17TreeSearchVisitorP8treeEdgeyy5Graph_0G2IdQZ_AEQzztKF":{"name":"treeEdge(_:_:)","abstract":"<p>Called for each edge that discovers a new vertex.</p>","parent_name":"TreeSearchVisitor"},"Protocols/GraphVisitor.html#/s:17PenguinStructures12GraphVisitorP0C0Qa":{"name":"Graph","abstract":"<p>The type of Graph this <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/DFSVisitor.html\">DFSVisitor</a></code> will be traversing.</p>","parent_name":"GraphVisitor"},"Protocols/GraphVisitor.html#/s:17PenguinStructures12GraphVisitorP8discover6vertex_y0C0_8VertexIdQZ_AFQzztKF":{"name":"discover(vertex:_:)","abstract":"<p>Called upon first discovering <code>vertex</code> in the graph.</p>","parent_name":"GraphVisitor"},"Protocols/GraphVisitor.html#/s:17PenguinStructures12GraphVisitorP7examine6vertex_y0C0_8VertexIdQZ_AFQzztKF":{"name":"examine(vertex:_:)","abstract":"<p>Called when <code>vertex</code> is at the front of the queue and is examined.</p>","parent_name":"GraphVisitor"},"Protocols/GraphVisitor.html#/s:17PenguinStructures12GraphVisitorP7examine4edge_y0C0_6EdgeIdQZ_AFQzztKF":{"name":"examine(edge:_:)","abstract":"<p>Called for each edge associated with a freshly discovered vertex.</p>","parent_name":"GraphVisitor"},"Protocols/GraphVisitor.html#/s:17PenguinStructures12GraphVisitorP6finish6vertex_y0C0_8VertexIdQZ_AFQzztKF":{"name":"finish(vertex:_:)","abstract":"<p>Called once for each vertex right after it is colored black.</p>","parent_name":"GraphVisitor"},"Enums/GraphErrors.html#/s:17PenguinStructures11GraphErrorsO12edgeNotFoundyA2CmF":{"name":"edgeNotFound","abstract":"<p>No matching edge was found.</p>","parent_name":"GraphErrors"},"Enums/GraphErrors.html#/s:17PenguinStructures11GraphErrorsO10stopSearchyA2CmF":{"name":"stopSearch","abstract":"<p>Visitors can throw this error when they would like search to immediately halt.</p>","parent_name":"GraphErrors"},"Enums/GraphErrors.html#/s:17PenguinStructures11GraphErrorsO13cycleDetectedyA2CmF":{"name":"cycleDetected","abstract":"<p>Thrown when an unexpected cycle is detected.</p>","parent_name":"GraphErrors"},"Protocols/GraphDistanceMeasure.html#/s:17PenguinStructures20GraphDistanceMeasureP17effectiveInfinityxvpZ":{"name":"effectiveInfinity","abstract":"<p>A value that is effectively always higher than any reasonable possible distance within the","parent_name":"GraphDistanceMeasure"},"Enums/VertexColor.html#/s:17PenguinStructures11VertexColorO5whiteyA2CmF":{"name":"white","abstract":"<p>white is used for unseen verticies in the graph.</p>","parent_name":"VertexColor"},"Enums/VertexColor.html#/s:17PenguinStructures11VertexColorO4grayyA2CmF":{"name":"gray","abstract":"<p>gray is used for verticies that are being processed.</p>","parent_name":"VertexColor"},"Enums/VertexColor.html#/s:17PenguinStructures11VertexColorO5blackyA2CmF":{"name":"black","abstract":"<p>black is used for verticies that have finished processing.</p>","parent_name":"VertexColor"},"Enums/Graphs.html#/s:17PenguinStructures6GraphsO24breadthFirstSearchNoInit_7visitor8colorMap7startAtyxz_q_zq0_zq1_tKAA14IncidenceGraphRzAA010VertexListO0Rz0O0Qy_RszAA10BFSVisitorR_AA07Mutableop8PropertyK0R0_SlR1_7ElementQy1_0P2IdAA0O8ProtocolPRtzAJQy0_AKRSAA0P5ColorO5ValueRt0_r2_lFZ":{"name":"breadthFirstSearchNoInit(_:visitor:colorMap:startAt:)","abstract":"<p>Runs breadth first search on <code>graph</code> using <code>colorMap</code> to keep track of search progress, and","parent_name":"Graphs"},"Enums/Graphs.html#/s:17PenguinStructures6GraphsO22depthFirstSearchNoInit_8colorMap7visitor5startyxz_q_zq0_z8VertexIdAA13GraphProtocolPQztKAA09IncidenceO0RzAA0m4ListO0Rz0O0Qy_RszAA07Mutableom8PropertyJ0R_AA10DFSVisitorR0_ANQy0_AORSAA0M5ColorO5ValueRt_r1_lFZ":{"name":"depthFirstSearchNoInit(_:colorMap:visitor:start:)","abstract":"<p>Runs depth first search on <code>graph</code> starting at <code>startVertex</code> using <code>colorMap</code> to keep track of","parent_name":"Graphs"},"Enums/Graphs.html#/s:17PenguinStructures6GraphsO19depthFirstTraversal_7visitoryxz_q_ztKAA14IncidenceGraphRzAA010VertexListI0Rz0I0Qy_RszAA10DFSVisitorR_AA11IdIndexable0jM0AA0I8ProtocolPRpzr0_lFZ":{"name":"depthFirstTraversal(_:visitor:)","abstract":"<p>Runs depth first search repeatedly until all verticies have been visited.</p>","parent_name":"Graphs"},"Enums/Graphs.html#/s:17PenguinStructures6GraphsO20dijkstraSearchNoInit_7visitor8colorMap014vertexDistanceJ0010edgeWeightJ07startAtyxz_q3_zq2_zq1_zq0_8VertexIdAA13GraphProtocolPQztKAA09IncidenceS0RzAA0q4ListS0Rz0S0Qy0_RszAA0sL7MeasureR_5ValueQy0_Rs_AA0s12EdgePropertyJ0R0_AA07MutablesqzJ0R1_AaVR2_AA15DijkstraVisitorR3_AA0R9IndexableAMRQAPQy1_AQRSASQy1_ATRSAPQy2_AYRSAPQy3_A_RSAA0Q5ColorOASRt2_r4_lFZ":{"name":"dijkstraSearchNoInit(_:visitor:colorMap:vertexDistanceMap:edgeWeightMap:startAt:)","abstract":"<p>Executes Dijkstra&rsquo;s graph search algorithm, without initializing any data structures.</p>","parent_name":"Graphs"},"Enums/Graphs.html#/s:17PenguinStructures6GraphsO14dijkstraSearch_7visitor13edgeWeightMap7startAtAA019TableVertexPropertyI0Vyxq_Gxz_q1_zq0_0M2IdAA13GraphProtocolPQztKAA09IncidenceP0RzAA0m4ListP0Rz0P0Qy0_RszAA0P15DistanceMeasureR_5ValueQy0_Rs_AA0p4EdgenI0R0_AA15DijkstraVisitorR1_AA0O9IndexableANRQAQQy1_ARRSr2_lFZ":{"name":"dijkstraSearch(_:visitor:edgeWeightMap:startAt:)","abstract":"<p>Executes Dijkstra&rsquo;s search algorithm over <code>graph</code> from <code>startVertex</code> using edge weights from","parent_name":"Graphs"},"Enums/Graphs.html#/s:17PenguinStructures6GraphsO15topologicalSortySay8VertexIdAA13GraphProtocolPQzGxzKAA09IncidenceH0RzAA0f4ListH0RzAA0G9IndexableAHRQlFZ":{"name":"topologicalSort(_:)","abstract":"<p>Computes a topological sort of <code>graph</code>.</p>","parent_name":"Graphs"},"Enums/Graphs.html":{"name":"Graphs","abstract":"<p>A namespace for graph-related functions.</p>"},"Enums/VertexColor.html":{"name":"VertexColor","abstract":"<p><code>VertexColor</code> is used to represent which verticies have been seen during graph searches.</p>"},"Protocols/GraphDistanceMeasure.html":{"name":"GraphDistanceMeasure","abstract":"<p>Represents a distance measure on a graph.</p>"},"Enums/GraphErrors.html":{"name":"GraphErrors","abstract":"<p>Errors that can be thrown during graph processing.</p>"},"Protocols/GraphVisitor.html":{"name":"GraphVisitor","abstract":"<p><code>GraphVisitor</code>s compute additional information during graph traverals.</p>"},"Protocols/TreeSearchVisitor.html":{"name":"TreeSearchVisitor","abstract":"<p><code>TreeSearchVisitor</code>s are used for graph traversals that reconstruct a tree, such as DFS &amp; BFS.</p>"},"Protocols/BFSVisitor.html":{"name":"BFSVisitor","abstract":"<p>A visitor to capture state during a breadth first search of a graph.</p>"},"Protocols/DFSVisitor.html":{"name":"DFSVisitor","abstract":"<p>DFSVisitor is used to extract information while executing depth first search.</p>"},"Protocols/DijkstraVisitor.html":{"name":"DijkstraVisitor","abstract":"<p>A visitor ot capture state during a Dijkstra search of a graph.</p>"},"Structs/BFSQueueVisitor.html":{"name":"BFSQueueVisitor","abstract":"<p>The BFSVisitor that implements breadth first search.</p>"},"Structs/VisitorChain.html":{"name":"VisitorChain","abstract":"<p>Undocumented</p>"},"Graph%20Algorithms.html#/s:17PenguinStructures15BFSVisitorChaina":{"name":"BFSVisitorChain","abstract":"<p>Undocumented</p>"},"Graph%20Algorithms.html#/s:17PenguinStructures15DFSVisitorChaina":{"name":"DFSVisitorChain","abstract":"<p>Undocumented</p>"},"Graph%20Algorithms.html#/s:17PenguinStructures20DijkstraVisitorChaina":{"name":"DijkstraVisitorChain","abstract":"<p>Undocumented</p>"},"Structs/TablePredecessorVisitor.html":{"name":"TablePredecessorVisitor","abstract":"<p>A graph algorithm visitor that records the parents of every discovered vertex.</p>"},"Protocols/MutableGraph.html#/s:17PenguinStructures12MutableGraphP7addEdge4from2to0F2IdQz06VertexI0Qz_AJtKF":{"name":"addEdge(from:to:)","abstract":"<p>Adds an edge from <code>source</code> to <code>destination</code> into the graph.</p>","parent_name":"MutableGraph"},"Protocols/MutableGraph.html#/s:17PenguinStructures12MutableGraphP10removeEdge4from2toy8VertexIdQz_AHtKF":{"name":"removeEdge(from:to:)","abstract":"<p>Removes the edge (u, v) from the graph.</p>","parent_name":"MutableGraph"},"Protocols/MutableGraph.html#/s:17PenguinStructures12MutableGraphP6remove4edgey6EdgeIdQz_tF":{"name":"remove(edge:)","abstract":"<p>Removes the edge <code>edge</code> from the graph.</p>","parent_name":"MutableGraph"},"Protocols/MutableGraph.html#/s:17PenguinStructures12MutableGraphP11removeEdgesyySb6EdgeIdQzKXEKF":{"name":"removeEdges(_:)","abstract":"<p>Removes all edges that satisfy <code>predicate</code>.</p>","parent_name":"MutableGraph"},"Protocols/MutableGraph.html#/s:17PenguinStructures12MutableGraphP11removeEdges4from_y8VertexIdQz_Sb04EdgeI0QzKXEtKF":{"name":"removeEdges(from:_:)","abstract":"<p>Removes all out edges from <code>vertex</code> that satisfy the given predicate.</p>","parent_name":"MutableGraph"},"Protocols/MutableGraph.html#/s:17PenguinStructures12MutableGraphP9addVertex0F2IdQzyF":{"name":"addVertex()","abstract":"<p>Adds a new vertex, returning its identifier.</p>","parent_name":"MutableGraph"},"Protocols/MutableGraph.html#/s:17PenguinStructures12MutableGraphP5clear6vertexy8VertexIdQz_tF":{"name":"clear(vertex:)","abstract":"<p>Removes all edges from <code>vertex</code>.</p>","parent_name":"MutableGraph"},"Protocols/MutableGraph.html#/s:17PenguinStructures12MutableGraphP6remove6vertexy8VertexIdQz_tF":{"name":"remove(vertex:)","abstract":"<p>Removes <code>vertex</code> from the graph.</p>","parent_name":"MutableGraph"},"Protocols/MutableGraph.html#/s:17PenguinStructures12MutableGraphPAAE20removedEdgeIfPresent4from2toy8VertexIdQz_AHtF":{"name":"removedEdgeIfPresent(from:to:)","abstract":"<p>Removes the edge from <code>u</code> to <code>v</code> if present, and does nothing otherwise.</p>","parent_name":"MutableGraph"},"Protocols/EdgeListGraph.html#/s:17PenguinStructures13EdgeListGraphP0C10CollectionQa":{"name":"EdgeCollection","abstract":"<p>The collection of all edge identifiers.</p>","parent_name":"EdgeListGraph"},"Protocols/EdgeListGraph.html#/s:17PenguinStructures13EdgeListGraphP9edgeCountSivp":{"name":"edgeCount","abstract":"<p>The total number of edges within the graph.</p>","parent_name":"EdgeListGraph"},"Protocols/EdgeListGraph.html#/s:17PenguinStructures13EdgeListGraphP5edges0C10CollectionQzyF":{"name":"edges()","abstract":"<p>A collection of edges.</p>","parent_name":"EdgeListGraph"},"Protocols/EdgeListGraph.html#/s:17PenguinStructures13EdgeListGraphP6source2of8VertexIdQz0cI0Qz_tF":{"name":"source(of:)","abstract":"<p>Returns the source vertex of <code>edge</code>.</p>","parent_name":"EdgeListGraph"},"Protocols/EdgeListGraph.html#/s:17PenguinStructures13EdgeListGraphP11destination2of8VertexIdQz0cI0Qz_tF":{"name":"destination(of:)","abstract":"<p>Returns the destination vertex of <code>edge</code>.</p>","parent_name":"EdgeListGraph"},"Protocols/VertexListGraph.html#/s:17PenguinStructures15VertexListGraphP0C10CollectionQa":{"name":"VertexCollection","abstract":"<p>The collection of all vertices.</p>","parent_name":"VertexListGraph"},"Protocols/VertexListGraph.html#/s:17PenguinStructures15VertexListGraphP11vertexCountSivp":{"name":"vertexCount","abstract":"<p>The total number of vertices in the graph.</p>","parent_name":"VertexListGraph"},"Protocols/VertexListGraph.html#/s:17PenguinStructures15VertexListGraphP8vertices0C10CollectionQzyF":{"name":"vertices()","abstract":"<p>All of the graph&rsquo;s vertices.</p>","parent_name":"VertexListGraph"},"Protocols/IncidenceGraph.html#/s:17PenguinStructures14IncidenceGraphP20VertexEdgeCollectionQa":{"name":"VertexEdgeCollection","abstract":"<p>The collection of edges originating from a given vertex.</p>","parent_name":"IncidenceGraph"},"Protocols/IncidenceGraph.html#/s:17PenguinStructures14IncidenceGraphP5edges4from20VertexEdgeCollectionQz0G2IdQz_tF":{"name":"edges(from:)","abstract":"<p>Computes the collection of edges from <code>vertex</code>.</p>","parent_name":"IncidenceGraph"},"Protocols/IncidenceGraph.html#/s:17PenguinStructures14IncidenceGraphP6source2of8VertexIdQz04EdgeH0Qz_tF":{"name":"source(of:)","abstract":"<p>Returns the source <code>VertexId</code> of <code>edge</code>.</p>","parent_name":"IncidenceGraph"},"Protocols/IncidenceGraph.html#/s:17PenguinStructures14IncidenceGraphP11destination2of8VertexIdQz04EdgeH0Qz_tF":{"name":"destination(of:)","abstract":"<p>Returns the source <code>VertexId</code> of <code>edge</code>.</p>","parent_name":"IncidenceGraph"},"Protocols/IncidenceGraph.html#/s:17PenguinStructures14IncidenceGraphP9outDegree2ofSi8VertexIdQz_tF":{"name":"outDegree(of:)","abstract":"<p>Computes the out-degree of <code>vertex</code>.</p>","parent_name":"IncidenceGraph"},"Protocols/GraphProtocol.html#/s:17PenguinStructures13GraphProtocolP8VertexIdQa":{"name":"VertexId","abstract":"<p>A handle to refer to a vertex in the graph.</p>","parent_name":"GraphProtocol"},"Protocols/GraphProtocol.html#/s:17PenguinStructures13GraphProtocolP6EdgeIdQa":{"name":"EdgeId","abstract":"<p>A handle to rever to an edge in the graph.</p>","parent_name":"GraphProtocol"},"Protocols/GraphProtocol.html":{"name":"GraphProtocol","abstract":"<p>Represents a Graph data structure.</p>"},"Protocols/IncidenceGraph.html":{"name":"IncidenceGraph","abstract":"<p>A graph that allows retrieval of edges from a given node.</p>"},"Protocols/VertexListGraph.html":{"name":"VertexListGraph","abstract":"<p>A <code>VertexListGraph</code> is a graph that can enumerate all the vertices within it.</p>"},"Protocols/EdgeListGraph.html":{"name":"EdgeListGraph","abstract":"<p>An <code>EdgeListGraph</code> is a graph that can enumerate all edges within it.</p>"},"Protocols/MutableGraph.html":{"name":"MutableGraph","abstract":"<p>A <code>MutableGraph</code> can be changed via the addition and removal of edges and vertices.</p>"},"Structs/LeafArray.html#/s:17PenguinStructures22HierarchicalCollectionP6CursorQa":{"name":"Cursor","parent_name":"LeafArray"},"Structs/LeafArray.html#/s:17PenguinStructures9LeafArrayVyACyxGSayxGcfc":{"name":"init(_:)","abstract":"<p>Wrap <code>array</code> to form a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/HierarchicalCollection.html\">HierarchicalCollection</a></code>.</p>","parent_name":"LeafArray"},"Structs/LeafArray.html#/s:17PenguinStructures9LeafArrayVyACyxGxd_tcfc":{"name":"init(_:)","abstract":"<p>Wrap <code>elements</code> to form a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/HierarchicalCollection.html\">HierarchicalCollection</a></code>.</p>","parent_name":"LeafArray"},"Structs/LeafArray.html#/s:17PenguinStructures22HierarchicalCollectionP12forEachWhile10startingAt_6CursorQzSgAH_Sb7ElementQzKXEtKF":{"name":"forEachWhile(startingAt:_:)","parent_name":"LeafArray"},"Structs/LeafArray.html#/s:17PenguinStructures22HierarchicalCollectionP7flattenSay7ElementQzGyF":{"name":"flatten()","parent_name":"LeafArray"},"Structs/LeafArray.html#/s:17PenguinStructures22HierarchicalCollectionP7flatten4intoyqd__z_tSmRd__7ElementQyd__AFRtzlF":{"name":"flatten(into:)","parent_name":"LeafArray"},"Structs/LeafArray.html#/s:17PenguinStructures22HierarchicalCollectionP13mapAndFlattenySayqd__Gqd__7ElementQzKXEKlF":{"name":"mapAndFlatten(_:)","parent_name":"LeafArray"},"Structs/LeafArray.html#/s:17PenguinStructures22HierarchicalCollectionP20compactMapAndFlattenySayqd__Gqd__Sg7ElementQzKXEKlF":{"name":"compactMapAndFlatten(_:)","parent_name":"LeafArray"},"Structs/LeafArray.html#/s:17PenguinStructures22HierarchicalCollectionP5countSivp":{"name":"count","parent_name":"LeafArray"},"Structs/HierarchicalArray/Cursor.html#/s:SL1loiySbx_xtFZ":{"name":"<(_:_:)","parent_name":"Cursor"},"Structs/HierarchicalArray.html#/s:17PenguinStructures22HierarchicalCollectionP7ElementQa":{"name":"Element","parent_name":"HierarchicalArray"},"Structs/HierarchicalArray/Cursor.html":{"name":"Cursor","parent_name":"HierarchicalArray"},"Structs/HierarchicalArray.html#/s:17PenguinStructures17HierarchicalArrayVyACyxGSayxGcfc":{"name":"init(_:)","abstract":"<p>Undocumented</p>","parent_name":"HierarchicalArray"},"Structs/HierarchicalArray.html#/s:17PenguinStructures22HierarchicalCollectionP12forEachWhile10startingAt_6CursorQzSgAH_Sb7ElementQzKXEtKF":{"name":"forEachWhile(startingAt:_:)","parent_name":"HierarchicalArray"},"Structs/HierarchicalArray.html#/s:17PenguinStructures22HierarchicalCollectionP7flatten4intoyqd__z_tSmRd__7ElementQyd__AFRtzlF":{"name":"flatten(into:)","parent_name":"HierarchicalArray"},"Structs/HierarchicalArray.html#/s:17PenguinStructures22HierarchicalCollectionP20compactMapAndFlattenySayqd__Gqd__Sg7ElementQzKXEKlF":{"name":"compactMapAndFlatten(_:)","parent_name":"HierarchicalArray"},"Structs/HierarchicalArray.html#/s:17PenguinStructures22HierarchicalCollectionP5countSivp":{"name":"count","parent_name":"HierarchicalArray"},"Structs/ConfigurableHeap.html#/s:17PenguinStructures16ConfigurableHeapV6Cursora":{"name":"Cursor","abstract":"<p>A logical pointer into the <code>ConfigurableHeap</code>&lsquo;s internal data structures.</p>","parent_name":"ConfigurableHeap"},"Structs/ConfigurableHeap.html#/s:17PenguinStructures16ConfigurableHeapV7indexerACyxq_q0_q1_Gq1__tcfc":{"name":"init(indexer:)","abstract":"<p>Initialize an empty heap using <code>indexer</code> for indexing.</p>","parent_name":"ConfigurableHeap"},"Structs/ConfigurableHeap.html#/s:17PenguinStructures16ConfigurableHeapV5countSivp":{"name":"count","abstract":"<p>The number of elements</p>","parent_name":"ConfigurableHeap"},"Structs/ConfigurableHeap.html#/s:17PenguinStructures16ConfigurableHeapV7isEmptySbvp":{"name":"isEmpty","abstract":"<p>True iff there are no elements within <code>self</code>.</p>","parent_name":"ConfigurableHeap"},"Structs/ConfigurableHeap.html#/s:17PenguinStructures16ConfigurableHeapV3add_4withyx_q_tF":{"name":"add(_:with:)","abstract":"<p>Adds <code>elem</code> with the specified <code>priority</code> to <code>self</code>.</p>","parent_name":"ConfigurableHeap"},"Structs/ConfigurableHeap.html#/s:17PenguinStructures16ConfigurableHeapV8popFrontxSgyF":{"name":"popFront()","abstract":"<p>Removes and returns the element with the smallest <code>priority</code> value from <code>self</code>.</p>","parent_name":"ConfigurableHeap"},"Structs/ConfigurableHeap.html#/s:17PenguinStructures16ConfigurableHeapV20popFrontWithPriorityx7element_q_8prioritytSgyF":{"name":"popFrontWithPriority()","abstract":"<p>Removes and returns the element with the smallest <code>priority</code> from <code>self</code>.</p>","parent_name":"ConfigurableHeap"},"Structs/ConfigurableHeap.html#/s:17PenguinStructures16ConfigurableHeapV11descriptionSSvp":{"name":"description","abstract":"<p>A string representation of the heap, including priorities of the elements.</p>","parent_name":"ConfigurableHeap"},"Structs/ConfigurableHeap.html#/s:17PenguinStructures16ConfigurableHeapVA2A20DefaultInitializableR1_rlEACyxq_q0_q1_Gycfc":{"name":"init()","abstract":"<p>Initialize an empty Heap.</p>","parent_name":"ConfigurableHeap"},"Structs/ConfigurableHeap.html#/s:17PenguinStructures16ConfigurableHeapVA2A01_cD7IndexerR1_rlE6update_15withNewPriorityq_x_q_tF":{"name":"update(_:withNewPriority:)","abstract":"<p>Updates the priority of <code>elem</code> to <code>newPriority</code>.</p>","parent_name":"ConfigurableHeap"},"Enums/DoubleEndedAllocationPolicy.html#/s:17PenguinStructures27DoubleEndedAllocationPolicyO9beginningyA2CmF":{"name":"beginning","abstract":"<p>Begin allocating elements at the beginning of the buffer.</p>","parent_name":"DoubleEndedAllocationPolicy"},"Enums/DoubleEndedAllocationPolicy.html#/s:17PenguinStructures27DoubleEndedAllocationPolicyO6middleyA2CmF":{"name":"middle","abstract":"<p>Begin allocating in the middle of the buffer.</p>","parent_name":"DoubleEndedAllocationPolicy"},"Enums/DoubleEndedAllocationPolicy.html#/s:17PenguinStructures27DoubleEndedAllocationPolicyO3endyA2CmF":{"name":"end","abstract":"<p>Begin allocating at the end of the buffer.</p>","parent_name":"DoubleEndedAllocationPolicy"},"Structs/DoubleEndedBuffer.html#/s:17PenguinStructures17DoubleEndedBufferV8capacity4withACyxGSi_AA0cD16AllocationPolicyOtcfc":{"name":"init(capacity:with:)","abstract":"<p>Allocate with a given capacity and insertion <code>initialPolicy</code>.</p>","parent_name":"DoubleEndedBuffer"},"Structs/DoubleEndedBuffer.html#/s:17PenguinStructures17DoubleEndedBufferV7isEmptySbvp":{"name":"isEmpty","abstract":"<p>True if no elements are contained within the data structure, false otherwise.</p>","parent_name":"DoubleEndedBuffer"},"Structs/DoubleEndedBuffer.html#/s:17PenguinStructures17DoubleEndedBufferV5countSivp":{"name":"count","abstract":"<p>Returns the number of elements contained within <code>self</code>.</p>","parent_name":"DoubleEndedBuffer"},"Structs/DoubleEndedBuffer.html#/s:17PenguinStructures17DoubleEndedBufferV8capacitySivp":{"name":"capacity","abstract":"<p>Returns the capacity of <code>self</code>.</p>","parent_name":"DoubleEndedBuffer"},"Structs/DoubleEndedBuffer.html#/s:17PenguinStructures17DoubleEndedBufferV12canPushFrontSbvp":{"name":"canPushFront","abstract":"<p>True iff there is available space at the beginning of the buffer.</p>","parent_name":"DoubleEndedBuffer"},"Structs/DoubleEndedBuffer.html#/s:17PenguinStructures17DoubleEndedBufferV11canPushBackSbvp":{"name":"canPushBack","abstract":"<p>True iff there is available space at the end of the buffer.</p>","parent_name":"DoubleEndedBuffer"},"Structs/DoubleEndedBuffer.html#/s:17PenguinStructures17DoubleEndedBufferV8pushBackyyxF":{"name":"pushBack(_:)","abstract":"<p>Add elem to the back of the buffer.</p>","parent_name":"DoubleEndedBuffer"},"Structs/DoubleEndedBuffer.html#/s:17PenguinStructures17DoubleEndedBufferV7popBackxyF":{"name":"popBack()","abstract":"<p>Removes and returns the element at the back, reducing <code>self</code>&lsquo;s count by one.</p>","parent_name":"DoubleEndedBuffer"},"Structs/DoubleEndedBuffer.html#/s:17PenguinStructures17DoubleEndedBufferV9pushFrontyyxF":{"name":"pushFront(_:)","abstract":"<p>Adds elem to the front of the buffer.</p>","parent_name":"DoubleEndedBuffer"},"Structs/DoubleEndedBuffer.html#/s:17PenguinStructures17DoubleEndedBufferV8popFrontxyF":{"name":"popFront()","abstract":"<p>Removes and returns the element at the front, reducing <code>self</code>&lsquo;s count by one.</p>","parent_name":"DoubleEndedBuffer"},"Structs/DoubleEndedBuffer.html#/s:17PenguinStructures17DoubleEndedBufferV10reallocate11newCapacity4withySi_AA0cD16AllocationPolicyOtF":{"name":"reallocate(newCapacity:with:)","abstract":"<p>Explicitly reallocate the backing buffer.</p>","parent_name":"DoubleEndedBuffer"},"Structs/DoubleEndedBuffer.html#/s:Sl10startIndex0B0Qzvp":{"name":"startIndex","parent_name":"DoubleEndedBuffer"},"Structs/DoubleEndedBuffer.html#/s:Sl8endIndex0B0Qzvp":{"name":"endIndex","parent_name":"DoubleEndedBuffer"},"Structs/DoubleEndedBuffer.html#/s:Sl5index5after5IndexQzAD_tF":{"name":"index(after:)","parent_name":"DoubleEndedBuffer"},"Structs/DoubleEndedBuffer.html#/s:Sly7ElementQz5IndexQzcip":{"name":"subscript(_:)","parent_name":"DoubleEndedBuffer"},"Structs/Deque/Cursor.html#/s:SL1loiySbx_xtFZ":{"name":"<(_:_:)","parent_name":"Cursor"},"Structs/Deque.html#/s:17PenguinStructures5DequeV5countSivp":{"name":"count","abstract":"<p>The number of elements contained within <code>self</code>.</p>","parent_name":"Deque"},"Structs/Deque.html#/s:17PenguinStructures5DequeV15initialCapacityACyxGSiSg_tcfc":{"name":"init(initialCapacity:)","abstract":"<p>Creates an empty Deque.</p>","parent_name":"Deque"},"Structs/Deque.html#/s:17PenguinStructures5DequeV7isEmptySbvp":{"name":"isEmpty","abstract":"<p>True iff no values are contained in `self.</p>","parent_name":"Deque"},"Structs/Deque.html#/s:17PenguinStructures5DequeV8pushBackyyxF":{"name":"pushBack(_:)","abstract":"<p>Add <code>elem</code> to the back of <code>self</code>.</p>","parent_name":"Deque"},"Structs/Deque.html#/s:17PenguinStructures5DequeV7popBackxyF":{"name":"popBack()","abstract":"<p>Removes and returns the element at the back, reducing <code>self</code>&lsquo;s count by one.</p>","parent_name":"Deque"},"Structs/Deque.html#/s:17PenguinStructures5DequeV9pushFrontyyxF":{"name":"pushFront(_:)","abstract":"<p>Adds <code>elem</code> to the front of <code>self</code>.</p>","parent_name":"Deque"},"Structs/Deque.html#/s:17PenguinStructures5DequeV8popFrontxyF":{"name":"popFront()","abstract":"<p>Removes and returns the element at the front, reducing <code>self</code>&lsquo;s count by one.</p>","parent_name":"Deque"},"Structs/Deque/Cursor.html":{"name":"Cursor","parent_name":"Deque"},"Structs/Deque.html#/s:17PenguinStructures5DequeV12forEachWhile10startingAt_AC6CursorVyx_GSgAI_SbxKXEtKF":{"name":"forEachWhile(startingAt:_:)","abstract":"<p>Call <code>fn</code> for each element in the collection until <code>fn</code> returns false.</p>","parent_name":"Deque"},"Protocols/MutableHierarchicalCollection.html#/s:17PenguinStructures29MutableHierarchicalCollectionP6swapAtyy6CursorQz_AFtF":{"name":"swapAt(_:_:)","abstract":"<p>Swaps the contents of <code>lhs</code> and <code>rhs</code>.</p>","parent_name":"MutableHierarchicalCollection"},"Protocols/MutableHierarchicalCollection.html#/s:17PenguinStructures29MutableHierarchicalCollectionP10forEachMutyyy7ElementQzzKXEKF":{"name":"forEachMut(_:)","abstract":"<p>Applies <code>fn</code> to each element in the hierarchical collection.</p>","parent_name":"MutableHierarchicalCollection"},"Protocols/HierarchicalCollection.html#/s:17PenguinStructures22HierarchicalCollectionP7ElementQa":{"name":"Element","abstract":"<p>The type of element contained within this hierarchical collection.</p>","parent_name":"HierarchicalCollection"},"Protocols/HierarchicalCollection.html#/s:17PenguinStructures22HierarchicalCollectionP6CursorQa":{"name":"Cursor","abstract":"<p>A cursor represents a location within the collection.</p>","parent_name":"HierarchicalCollection"},"Protocols/HierarchicalCollection.html#/s:17PenguinStructures22HierarchicalCollectionP5countSivp":{"name":"count","abstract":"<p>The total number of elements within this collection.</p>","parent_name":"HierarchicalCollection"},"Protocols/HierarchicalCollection.html#/s:17PenguinStructures22HierarchicalCollectionP12forEachWhile10startingAt_6CursorQzSgAH_Sb7ElementQzKXEtKF":{"name":"forEachWhile(startingAt:_:)","abstract":"<p>Call <code>fn</code> for each element in the collection until <code>fn</code> returns false.</p>","parent_name":"HierarchicalCollection"},"Protocols/HierarchicalCollection.html#/s:17PenguinStructures22HierarchicalCollectionP7forEachyyy7ElementQzKXEKF":{"name":"forEach(_:)","abstract":"<p>Call <code>fn</code> for each element in the collection.</p>","parent_name":"HierarchicalCollection"},"Protocols/HierarchicalCollection.html#/s:17PenguinStructures22HierarchicalCollectionP10firstIndex5where6CursorQzSgSb7ElementQzKXE_tKF":{"name":"firstIndex(where:)","abstract":"<p>Finds the first index where <code>predicate</code> is <code>true</code>, and returns a cursor that points to that","parent_name":"HierarchicalCollection"},"Protocols/HierarchicalCollection.html#/s:17PenguinStructures22HierarchicalCollectionP7flattenSay7ElementQzGyF":{"name":"flatten()","abstract":"<p>Copies all elements in this hierarchical data structure into a flat array.</p>","parent_name":"HierarchicalCollection"},"Protocols/HierarchicalCollection.html#/s:17PenguinStructures22HierarchicalCollectionP7flatten4intoyqd__z_tSmRd__7ElementQyd__AFRtzlF":{"name":"flatten(into:)","abstract":"<p>Copies all elements in this hierarchical data structure into the end of a collection.</p>","parent_name":"HierarchicalCollection"},"Protocols/HierarchicalCollection.html#/s:17PenguinStructures22HierarchicalCollectionP13mapAndFlattenySayqd__Gqd__7ElementQzKXEKlF":{"name":"mapAndFlatten(_:)","abstract":"<p>Applies <code>fn</code> on each element in the collection, and concatenates the results.</p>","parent_name":"HierarchicalCollection"},"Protocols/HierarchicalCollection.html#/s:17PenguinStructures22HierarchicalCollectionP20compactMapAndFlattenySayqd__Gqd__Sg7ElementQzKXEKlF":{"name":"compactMapAndFlatten(_:)","abstract":"<p>Applies <code>fn</code> on each element in the collection, and concatenates the non-nil results.</p>","parent_name":"HierarchicalCollection"},"Protocols/HierarchicalCollection.html":{"name":"HierarchicalCollection","abstract":"<p>Represents a hierarchical collection of data.</p>"},"Protocols/MutableHierarchicalCollection.html":{"name":"MutableHierarchicalCollection","abstract":"<p>MutableHierarchicalCollection extends <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/HierarchicalCollection.html\">HierarchicalCollection</a></code>s to allow mutation of contents.</p>"},"Structs/Deque.html":{"name":"Deque","abstract":"<p>A dynamically-sized double-ended queue that allows pushing and popping at both the front and the"},"Structs/DoubleEndedBuffer.html":{"name":"DoubleEndedBuffer","abstract":"<p>A fixed-size, contiguous collection allowing additions and removals at either end (space"},"Enums/DoubleEndedAllocationPolicy.html":{"name":"DoubleEndedAllocationPolicy","abstract":"<p>Describes where the initial insertions into a buffer should go.</p>"},"Hierarchical%20Collections.html#/s:17PenguinStructures10SimpleHeapa":{"name":"SimpleHeap","abstract":"<p>A basic heap data structure containing <code>Element</code>s.</p>"},"Hierarchical%20Collections.html#/s:17PenguinStructures19ReprioritizableHeapa":{"name":"ReprioritizableHeap","abstract":"<p>A heap that supports reprioritizinig elements contained within it.</p>"},"Structs/ConfigurableHeap.html":{"name":"ConfigurableHeap","abstract":"<p>A hierarchical collection of <code>Element</code>s, partially ordered so that finding the minimum element"},"Structs/HierarchicalArray.html":{"name":"HierarchicalArray","abstract":"<p>A hierarchical collection composed of <code>T</code> hierarchical collections.</p>"},"Structs/LeafArray.html":{"name":"LeafArray","abstract":"<p>LeafArray wraps an <code>Array</code> to form a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/HierarchicalCollection.html\">HierarchicalCollection</a></code>.</p>"},"Hierarchical%20Collections.html":{"name":"Hierarchical Collections"},"Graph%20Kinds%20%28Protocols%29.html":{"name":"Graph Kinds (Protocols)"},"Graph%20Algorithms.html":{"name":"Graph Algorithms"},"Parallel%20Graph%20Algorithms.html":{"name":"Parallel Graph Algorithms"},"Graph%20Implementations.html":{"name":"Graph Implementations"},"Graph%20Property%20Maps.html":{"name":"Graph Property Maps"},"Configurable%20Heap%20Internal%20Types.html":{"name":"Configurable Heap Internal Types"},"Other%20Classes.html":{"name":"Other Classes","abstract":"<p>The following classes are available globally.</p>"},"Other%20Extensions.html":{"name":"Other Extensions","abstract":"<p>The following extensions are available globally.</p>"},"Other%20Protocols.html":{"name":"Other Protocols","abstract":"<p>The following protocols are available globally.</p>"},"Other%20Structs.html":{"name":"Other Structures","abstract":"<p>The following structures are available globally.</p>"}}