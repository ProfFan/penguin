{"Structs/InlineComputeThreadPool.html#/s:15PenguinParallel23InlineComputeThreadPoolVACycfc":{"name":"init()","abstract":"<p>Initializes <code>self</code>.</p>","parent_name":"InlineComputeThreadPool"},"Structs/InlineComputeThreadPool.html#/s:15PenguinParallel23InlineComputeThreadPoolV11parallelismSivp":{"name":"parallelism","abstract":"<p>The amount of parallelism available in this thread pool.</p>","parent_name":"InlineComputeThreadPool"},"Structs/InlineComputeThreadPool.html#/s:15PenguinParallel23InlineComputeThreadPoolV07currentE5IndexSiSgvp":{"name":"currentThreadIndex","abstract":"<p>The index of the current thread.</p>","parent_name":"InlineComputeThreadPool"},"Structs/InlineComputeThreadPool.html#/s:15PenguinParallel23InlineComputeThreadPoolV8dispatchyyyACXEF":{"name":"dispatch(_:)","abstract":"<p>Dispatch <code>fn</code> to be run at some point in the future (immediately).</p>","parent_name":"InlineComputeThreadPool"},"Structs/InlineComputeThreadPool.html#/s:15PenguinParallel23InlineComputeThreadPoolV4joinyyyACKXE_yACKXEtKF":{"name":"join(_:_:)","abstract":"<p>Executes <code>a</code> and <code>b</code> and returns when both are complete.</p>","parent_name":"InlineComputeThreadPool"},"Structs/PosixThreadLocalStorage.html#/s:15PenguinParallel21RawThreadLocalStorageP3KeyQa":{"name":"Key","parent_name":"PosixThreadLocalStorage"},"Structs/PosixThreadLocalStorage.html#/s:15PenguinParallel21RawThreadLocalStorageP7makeKey0H0QzyFZ":{"name":"makeKey()","parent_name":"PosixThreadLocalStorage"},"Structs/PosixThreadLocalStorage.html#/s:15PenguinParallel21RawThreadLocalStorageP3get3forSvSg3KeyQz_tFZ":{"name":"get(for:)","parent_name":"PosixThreadLocalStorage"},"Structs/PosixThreadLocalStorage.html#/s:15PenguinParallel21RawThreadLocalStorageP3set5value3forySvSg_3KeyQztFZ":{"name":"set(value:for:)","parent_name":"PosixThreadLocalStorage"},"Structs/NSConditionVariable.html#/s:15PenguinParallel25ConditionVariableProtocolP5MutexQa":{"name":"Mutex","parent_name":"NSConditionVariable"},"Structs/NSConditionVariable.html#/s:15PenguinParallel19NSConditionVariableVACycfc":{"name":"init()","abstract":"<p>Initializes an empty condition variable.</p>","parent_name":"NSConditionVariable"},"Structs/NSConditionVariable.html#/s:15PenguinParallel25ConditionVariableProtocolP4waityy5MutexQzF":{"name":"wait(_:)","parent_name":"NSConditionVariable"},"Structs/NSConditionVariable.html#/s:15PenguinParallel25ConditionVariableProtocolP6signalyyF":{"name":"signal()","parent_name":"NSConditionVariable"},"Structs/NSConditionVariable.html#/s:15PenguinParallel25ConditionVariableProtocolP9broadcastyyF":{"name":"broadcast()","parent_name":"NSConditionVariable"},"Structs/NSConditionMutex.html#/s:15PenguinParallel13MutexProtocolPxycfc":{"name":"init()","parent_name":"NSConditionMutex"},"Structs/NSConditionMutex.html#/s:15PenguinParallel13MutexProtocolP4lockyyF":{"name":"lock()","parent_name":"NSConditionMutex"},"Structs/NSConditionMutex.html#/s:15PenguinParallel13MutexProtocolP6unlockyyF":{"name":"unlock()","parent_name":"NSConditionMutex"},"Structs/NSConditionMutex.html#/s:15PenguinParallel22ConditionMutexProtocolP5awaityySbyXEF":{"name":"await(_:)","parent_name":"NSConditionMutex"},"Structs/NSMutex.html#/s:15PenguinParallel7NSMutexVACycfc":{"name":"init()","abstract":"<p>Initializes <code>self</code> in an unlocked state.</p>","parent_name":"NSMutex"},"Structs/NSMutex.html#/s:15PenguinParallel7NSMutexV4lockyyF":{"name":"lock()","abstract":"<p>Locks <code>self</code>.</p>","parent_name":"NSMutex"},"Structs/NSMutex.html#/s:15PenguinParallel7NSMutexV6unlockyyF":{"name":"unlock()","abstract":"<p>Unlocks <code>self</code>.</p>","parent_name":"NSMutex"},"Structs/PosixConcurrencyPlatform.html#/s:15PenguinParallel24PosixConcurrencyPlatformVACycfc":{"name":"init()","abstract":"<p>Undocumented</p>","parent_name":"PosixConcurrencyPlatform"},"Structs/PosixConcurrencyPlatform.html#/s:15PenguinParallel19ConcurrencyPlatformP5MutexQa":{"name":"Mutex","parent_name":"PosixConcurrencyPlatform"},"Structs/PosixConcurrencyPlatform.html#/s:15PenguinParallel19ConcurrencyPlatformP14ConditionMutexQa":{"name":"ConditionMutex","parent_name":"PosixConcurrencyPlatform"},"Structs/PosixConcurrencyPlatform.html#/s:15PenguinParallel19ConcurrencyPlatformP17ConditionVariableQa":{"name":"ConditionVariable","parent_name":"PosixConcurrencyPlatform"},"Structs/PosixConcurrencyPlatform.html#/s:15PenguinParallel19ConcurrencyPlatformP6ThreadQa":{"name":"Thread","parent_name":"PosixConcurrencyPlatform"},"Structs/PosixConcurrencyPlatform.html#/s:15PenguinParallel19ConcurrencyPlatformP22BaseThreadLocalStorageQa":{"name":"BaseThreadLocalStorage","parent_name":"PosixConcurrencyPlatform"},"Structs/PosixConcurrencyPlatform.html#/s:15PenguinParallel19ConcurrencyPlatformP10makeThread4name_0F0QzSS_yyctF":{"name":"makeThread(name:_:)","parent_name":"PosixConcurrencyPlatform"},"Structs/TypedThreadLocalStorage/Key.html#/s:15PenguinParallel23TypedThreadLocalStorageV3KeyV10localValueqd__Sgvp":{"name":"localValue","abstract":"<p>The thread-local value associated with <code>self</code>.</p>","parent_name":"Key"},"Structs/TypedThreadLocalStorage/Key.html":{"name":"Key","abstract":"<p>Token used to index into the thread local storage.</p>","parent_name":"TypedThreadLocalStorage"},"Structs/TypedThreadLocalStorage.html#/s:15PenguinParallel23TypedThreadLocalStorageV7makeKey3forAC0H0Vyx_qd__Gqd__m_tRld__ClFZ":{"name":"makeKey(for:)","abstract":"<p>Allocates a key for type <code>T</code>.</p>","parent_name":"TypedThreadLocalStorage"},"Structs/TypedThreadLocalStorage.html#/s:15PenguinParallel23TypedThreadLocalStorageV3getyqd__SgAC3KeyVyx_qd__GRld__ClFZ":{"name":"get(_:)","abstract":"<p>Retrieves the thread-local value for <code>key</code>, if it exists.</p>","parent_name":"TypedThreadLocalStorage"},"Structs/TypedThreadLocalStorage.html#/s:15PenguinParallel23TypedThreadLocalStorageV3get_7defaultqd__AC3KeyVyx_qd__G_qd__yXKtRld__ClFZ":{"name":"get(_:default:)","abstract":"<p>Retrieves the thread-local value for <code>key</code>, creating it with <code>defaultValue</code> if it has not","parent_name":"TypedThreadLocalStorage"},"Structs/TypedThreadLocalStorage.html#/s:15PenguinParallel23TypedThreadLocalStorageV3set_3foryqd__Sg_AC3KeyVyx_qd__GtRld__ClFZ":{"name":"set(_:for:)","abstract":"<p>Stores <code>newValue</code> in thread-local storage using <code>key</code>.</p>","parent_name":"TypedThreadLocalStorage"},"Structs/TypedThreadLocalStorage.html":{"name":"TypedThreadLocalStorage","abstract":"<p>Wrapper around an underlying thread local storage abstraction to provide a"},"Structs/PosixConcurrencyPlatform.html":{"name":"PosixConcurrencyPlatform","abstract":"<p>Undocumented</p>"},"Structs/NSMutex.html":{"name":"NSMutex","abstract":"<p>A wrapper around <code>NSLock</code> to conform to the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/MutexProtocol.html\">MutexProtocol</a></code>.</p>"},"Structs/NSConditionMutex.html":{"name":"NSConditionMutex","abstract":"<p>Undocumented</p>"},"Structs/NSConditionVariable.html":{"name":"NSConditionVariable","abstract":"<p>Undocumented</p>"},"Structs/PosixThreadLocalStorage.html":{"name":"PosixThreadLocalStorage","abstract":"<p>Undocumented</p>"},"Structs/InlineComputeThreadPool.html":{"name":"InlineComputeThreadPool","abstract":"<p>A <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/ComputeThreadPool.html\">ComputeThreadPool</a></code> that executes everything immediately on the current thread.</p>"},"Protocols/TypedComputeThreadPool.html#/s:15PenguinParallel22TypedComputeThreadPoolP8dispatchyyyxXEF":{"name":"dispatch(_:)","abstract":"<p>Submit a task to be executed on the threadpool.</p>","parent_name":"TypedComputeThreadPool"},"Protocols/TypedComputeThreadPool.html#/s:15PenguinParallel22TypedComputeThreadPoolP4joinyyyxXE_yxXEtF":{"name":"join(_:_:)","abstract":"<p>Run two tasks (optionally) in parallel.</p>","parent_name":"TypedComputeThreadPool"},"Protocols/TypedComputeThreadPool.html#/s:15PenguinParallel22TypedComputeThreadPoolP4joinyyyxKXE_yxKXEtKF":{"name":"join(_:_:)","abstract":"<p>Run two throwing tasks (optionally) in parallel; if one task throws, it is unspecified","parent_name":"TypedComputeThreadPool"},"Protocols/ComputeThreadPool.html#/s:15PenguinParallel17ComputeThreadPoolP8dispatchyyyycF":{"name":"dispatch(_:)","abstract":"<p>Schedules <code>fn</code> to be executed in the threadpool eventually.</p>","parent_name":"ComputeThreadPool"},"Protocols/ComputeThreadPool.html#/s:15PenguinParallel17ComputeThreadPoolP4joinyyyyXE_yyXEtF":{"name":"join(_:_:)","abstract":"<p>Executes <code>a</code> and <code>b</code> optionally in parallel; both are guaranteed to have finished executing","parent_name":"ComputeThreadPool"},"Protocols/ComputeThreadPool.html#/s:15PenguinParallel17ComputeThreadPoolP4joinyyyyKXE_yyKXEtKF":{"name":"join(_:_:)","abstract":"<p>Executes <code>a</code> and <code>b</code> optionally in parallel; if one throws, it is unspecified whether the","parent_name":"ComputeThreadPool"},"Protocols/ComputeThreadPool.html#/s:15PenguinParallel17ComputeThreadPoolP0B7ForFunca":{"name":"ParallelForFunc","abstract":"<p>A function that can be executed in parallel.</p>","parent_name":"ComputeThreadPool"},"Protocols/ComputeThreadPool.html#/s:15PenguinParallel17ComputeThreadPoolP11parallelFor1n_ySi_ySi_SitKXEtKF":{"name":"parallelFor(n:_:)","abstract":"<p>Returns after executing <code>fn</code> <code>n</code> times.</p>","parent_name":"ComputeThreadPool"},"Protocols/ComputeThreadPool.html#/s:15PenguinParallel17ComputeThreadPoolP11parallelismSivp":{"name":"parallelism","abstract":"<p>The maximum amount of parallelism possible within this thread pool.</p>","parent_name":"ComputeThreadPool"},"Protocols/ComputeThreadPool.html#/s:15PenguinParallel17ComputeThreadPoolP07currentD5IndexSiSgvp":{"name":"currentThreadIndex","abstract":"<p>Returns the index of the current thread in the pool, if running on a thread-pool thread,","parent_name":"ComputeThreadPool"},"Protocols/RawThreadLocalStorage.html#/s:15PenguinParallel21RawThreadLocalStorageP3KeyQa":{"name":"Key","abstract":"<p>The key type used to index into the thread local storage.</p>","parent_name":"RawThreadLocalStorage"},"Protocols/RawThreadLocalStorage.html#/s:15PenguinParallel21RawThreadLocalStorageP7makeKey0H0QzyFZ":{"name":"makeKey()","abstract":"<p>Makes a new key; the returned key should be used for the entire process lifetime.</p>","parent_name":"RawThreadLocalStorage"},"Protocols/RawThreadLocalStorage.html#/s:15PenguinParallel21RawThreadLocalStorageP3get3forSvSg3KeyQz_tFZ":{"name":"get(for:)","abstract":"<p>Retrieves the raw pointer associated with the given key.</p>","parent_name":"RawThreadLocalStorage"},"Protocols/RawThreadLocalStorage.html#/s:15PenguinParallel21RawThreadLocalStorageP3set5value3forySvSg_3KeyQztFZ":{"name":"set(value:for:)","abstract":"<p>Sets the raw pointer associated with the given key.</p>","parent_name":"RawThreadLocalStorage"},"Protocols/ConditionVariableProtocol.html#/s:15PenguinParallel25ConditionVariableProtocolP5MutexQa":{"name":"Mutex","abstract":"<p>The mutex type associated with this condition variable.</p>","parent_name":"ConditionVariableProtocol"},"Protocols/ConditionVariableProtocol.html#/s:15PenguinParallel25ConditionVariableProtocolPxycfc":{"name":"init()","abstract":"<p>Initializes <code>self</code>.</p>","parent_name":"ConditionVariableProtocol"},"Protocols/ConditionVariableProtocol.html#/s:15PenguinParallel25ConditionVariableProtocolP4waityy5MutexQzF":{"name":"wait(_:)","abstract":"<p>Wait until signaled, releasing <code>lock</code> while waiting.</p>","parent_name":"ConditionVariableProtocol"},"Protocols/ConditionVariableProtocol.html#/s:15PenguinParallel25ConditionVariableProtocolP6signalyyF":{"name":"signal()","abstract":"<p>Wake up one waiter.</p>","parent_name":"ConditionVariableProtocol"},"Protocols/ConditionVariableProtocol.html#/s:15PenguinParallel25ConditionVariableProtocolP9broadcastyyF":{"name":"broadcast()","abstract":"<p>Wake up all waiters.</p>","parent_name":"ConditionVariableProtocol"},"Protocols/ConditionMutexProtocol.html#/s:15PenguinParallel22ConditionMutexProtocolP8lockWhenyySbyXEF":{"name":"lockWhen(_:)","abstract":"<p>Locks <code>self</code> when <code>predicate</code> returns true.</p>","parent_name":"ConditionMutexProtocol"},"Protocols/ConditionMutexProtocol.html#/s:15PenguinParallel22ConditionMutexProtocolP8lockWhenyqd__SbyXE_qd__yKXEtKlF":{"name":"lockWhen(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"ConditionMutexProtocol"},"Protocols/ConditionMutexProtocol.html#/s:15PenguinParallel22ConditionMutexProtocolP5awaityySbyXEF":{"name":"await(_:)","abstract":"<p>Unlocks <code>self</code> until <code>predicate</code> returns <code>true</code>.</p>","parent_name":"ConditionMutexProtocol"},"Protocols/MutexProtocol.html#/s:15PenguinParallel13MutexProtocolPxycfc":{"name":"init()","abstract":"<p>Initializes the lock in the unlocked state.</p>","parent_name":"MutexProtocol"},"Protocols/MutexProtocol.html#/s:15PenguinParallel13MutexProtocolP4lockyyF":{"name":"lock()","abstract":"<p>Locks the lock</p>","parent_name":"MutexProtocol"},"Protocols/MutexProtocol.html#/s:15PenguinParallel13MutexProtocolP6unlockyyF":{"name":"unlock()","abstract":"<p>Unlocks the lock.</p>","parent_name":"MutexProtocol"},"Protocols/MutexProtocol.html#/s:15PenguinParallel13MutexProtocolPAAE8withLockyqd__qd__yKXEKlF":{"name":"withLock(_:)","abstract":"<p>Runs <code>fn</code> while holding <code>self</code>&lsquo;s lock.</p>","parent_name":"MutexProtocol"},"Protocols/ThreadProtocol.html#/s:15PenguinParallel14ThreadProtocolP4joinyyF":{"name":"join()","abstract":"<p>Blocks until the thread has finished executing.</p>","parent_name":"ThreadProtocol"},"Protocols/ConcurrencyPlatform.html#/s:15PenguinParallel19ConcurrencyPlatformP5MutexQa":{"name":"Mutex","abstract":"<p>The type of mutexes (aka locks) used.</p>","parent_name":"ConcurrencyPlatform"},"Protocols/ConcurrencyPlatform.html#/s:15PenguinParallel19ConcurrencyPlatformP14ConditionMutexQa":{"name":"ConditionMutex","abstract":"<p>The type of conditional mutexes that are available.</p>","parent_name":"ConcurrencyPlatform"},"Protocols/ConcurrencyPlatform.html#/s:15PenguinParallel19ConcurrencyPlatformP17ConditionVariableQa":{"name":"ConditionVariable","abstract":"<p>The type of the condition variable that&rsquo;s available.</p>","parent_name":"ConcurrencyPlatform"},"Protocols/ConcurrencyPlatform.html#/s:15PenguinParallel19ConcurrencyPlatformP6ThreadQa":{"name":"Thread","abstract":"<p>The type of threads that are used.</p>","parent_name":"ConcurrencyPlatform"},"Protocols/ConcurrencyPlatform.html#/s:15PenguinParallel19ConcurrencyPlatformP22BaseThreadLocalStorageQa":{"name":"BaseThreadLocalStorage","abstract":"<p>The thread local storage.</p>","parent_name":"ConcurrencyPlatform"},"Protocols/ConcurrencyPlatform.html#/s:15PenguinParallel19ConcurrencyPlatformP18ThreadLocalStoragea":{"name":"ThreadLocalStorage","abstract":"<p>A convenient type to manage thread local storage.</p>","parent_name":"ConcurrencyPlatform"},"Protocols/ConcurrencyPlatform.html#/s:15PenguinParallel19ConcurrencyPlatformP10makeThread4name_0F0QzSS_yyctF":{"name":"makeThread(name:_:)","abstract":"<p>Makes a thread.</p>","parent_name":"ConcurrencyPlatform"},"Protocols/ConcurrencyPlatform.html":{"name":"ConcurrencyPlatform","abstract":"<p>Abstracts over different concurrency abstractions.</p>"},"Protocols/ThreadProtocol.html":{"name":"ThreadProtocol","abstract":"<p>Represents a thread of execution.</p>"},"Protocols/MutexProtocol.html":{"name":"MutexProtocol","abstract":"<p>Mutual exclusion locks.</p>"},"Protocols/ConditionMutexProtocol.html":{"name":"ConditionMutexProtocol","abstract":"<p>Allows for waiting until a given condition is satisifed.</p>"},"Protocols/ConditionVariableProtocol.html":{"name":"ConditionVariableProtocol","abstract":"<p>A condition variable.</p>"},"Protocols/RawThreadLocalStorage.html":{"name":"RawThreadLocalStorage","abstract":"<p>Abstracts over thread local storage.</p>"},"Protocols/ComputeThreadPool.html":{"name":"ComputeThreadPool","abstract":"<p>Allows efficient use of multi-core CPUs by managing a fixed-size collection of threads.</p>"},"Protocols/TypedComputeThreadPool.html":{"name":"TypedComputeThreadPool","abstract":"<p>Typed compute threadpools support additional sophisticated operations.</p>"},"Enums/ComputeThreadPools.html#/s:15PenguinParallel18ComputeThreadPoolsO6globalAA0cD4Pool_pvpZ":{"name":"global","abstract":"<p>A global default <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/ComputeThreadPool.html\">ComputeThreadPool</a></code>.</p>","parent_name":"ComputeThreadPools"},"Enums/ComputeThreadPools.html#/s:15PenguinParallel18ComputeThreadPoolsO5localAA0cD4Pool_pvpZ":{"name":"local","abstract":"<p>A thread local <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/ComputeThreadPool.html\">ComputeThreadPool</a></code>.</p>","parent_name":"ComputeThreadPools"},"Enums/ComputeThreadPools.html#/s:15PenguinParallel18ComputeThreadPoolsO07currentD5IndexSiSgvpZ":{"name":"currentThreadIndex","abstract":"<p>The thread index for the current thread, based on the current thread-local compute pool.</p>","parent_name":"ComputeThreadPools"},"Enums/ComputeThreadPools.html#/s:15PenguinParallel18ComputeThreadPoolsO11parallelismSivpZ":{"name":"parallelism","abstract":"<p>The amount of parallelism provided by the current thread-local compute pool.</p>","parent_name":"ComputeThreadPools"},"Enums/ComputeThreadPools.html#/s:15PenguinParallel18ComputeThreadPoolsO8withPoolyxAA0cdG0_p_xyKXEtKlFZ":{"name":"withPool(_:_:)","abstract":"<p>Sets <code>pool</code> to <code><a href=\"36f8f5912051ae747ef441d6511ca4cbEnums/ComputeThreadPools.html#/s:15PenguinParallel18ComputeThreadPoolsO5localAA0cD4Pool_pvpZ\">local</a></code> for the duration of <code>body</code>.</p>","parent_name":"ComputeThreadPools"},"Enums/ComputeThreadPools.html":{"name":"ComputeThreadPools","abstract":"<p>A namespace for threadpool operations.</p>"},"Classes/PosixThread.html#/s:15PenguinParallel11PosixThreadC4joinyyF":{"name":"join()","abstract":"<p>Blocks until the thread represented by <code>self</code> terminates.</p>","parent_name":"PosixThread"},"Classes/PosixThread.html#/s:15PenguinParallel11PosixThreadC11descriptionSSvp":{"name":"description","abstract":"<p>A string representation of this thread.</p>","parent_name":"PosixThread"},"Classes/PosixThread.html":{"name":"PosixThread","abstract":"<p>A basic thread implemented on top of POSIX system calls.</p>"},"Classes/NaiveThreadPool.html#/s:15PenguinParallel17ComputeThreadPoolP11parallelismSivp":{"name":"parallelism","parent_name":"NaiveThreadPool"},"Classes/NaiveThreadPool.html#/s:15PenguinParallel17ComputeThreadPoolP07currentD5IndexSiSgvp":{"name":"currentThreadIndex","parent_name":"NaiveThreadPool"},"Classes/NaiveThreadPool.html#/s:15PenguinParallel22TypedComputeThreadPoolP8dispatchyyyxXEF":{"name":"dispatch(_:)","parent_name":"NaiveThreadPool"},"Classes/NaiveThreadPool.html#/s:15PenguinParallel22TypedComputeThreadPoolP4joinyyyxKXE_yxKXEtKF":{"name":"join(_:_:)","parent_name":"NaiveThreadPool"},"Classes/NaiveThreadPool.html#/s:15PenguinParallel15NaiveThreadPoolC6globalACvpZ":{"name":"global","abstract":"<p>Undocumented</p>","parent_name":"NaiveThreadPool"},"Classes/NaiveThreadPool.html":{"name":"NaiveThreadPool","abstract":"<p>A Naive ThreadPool.</p>"},"Extensions/Sequence.html#/s:ST15PenguinParallelE18asPipelineSequence4name4file8function4lineAA0edE0VyxGSSSg_s12StaticStringVALSitF":{"name":"asPipelineSequence(name:file:function:line:)","abstract":"<p>Undocumented</p>","parent_name":"Sequence"},"Extensions/Sequence.html#/s:ST15PenguinParallelE20makePipelineIterator4name4file8function4lineAA08SequencedE0VyxGSSSg_s12StaticStringVALSitF":{"name":"makePipelineIterator(name:file:function:line:)","abstract":"<p>Undocumented</p>","parent_name":"Sequence"},"Structs/Zip2PipelineIterator.html#/s:15PenguinParallel24PipelineIteratorProtocolP7ElementQa":{"name":"Element","parent_name":"Zip2PipelineIterator"},"Structs/Zip2PipelineIterator.html#/s:15PenguinParallel20Zip2PipelineIteratorVyACyxq_Gx_q_tcfc":{"name":"init(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Zip2PipelineIterator"},"Structs/Zip2PipelineIterator.html#/s:15PenguinParallel24PipelineIteratorProtocolP4next7ElementQzSgyKF":{"name":"next()","parent_name":"Zip2PipelineIterator"},"Structs/TransformPipelineIterator.html#/s:15PenguinParallel24PipelineIteratorProtocolP7ElementQa":{"name":"Element","parent_name":"TransformPipelineIterator"},"Structs/TransformPipelineIterator.html#/s:15PenguinParallel25TransformPipelineIteratorV0C8Functiona":{"name":"TransformFunction","abstract":"<p>Undocumented</p>","parent_name":"TransformPipelineIterator"},"Structs/TransformPipelineIterator.html#/s:15PenguinParallel25TransformPipelineIteratorV_4name11threadCount10bufferSize9transformACyxq_Gx_SSSgS2iq_Sg7ElementQzKctcfc":{"name":"init(_:name:threadCount:bufferSize:transform:)","abstract":"<p>Undocumented</p>","parent_name":"TransformPipelineIterator"},"Structs/TransformPipelineIterator.html#/s:15PenguinParallel24PipelineIteratorProtocolP4next7ElementQzSgyKF":{"name":"next()","parent_name":"TransformPipelineIterator"},"Structs/TakePipelineIterator.html#/s:15PenguinParallel24PipelineIteratorProtocolP4next7ElementQzSgyKF":{"name":"next()","parent_name":"TakePipelineIterator"},"Structs/SequencePipelineIterator.html#/s:15PenguinParallel24PipelineIteratorProtocolP7ElementQa":{"name":"Element","parent_name":"SequencePipelineIterator"},"Structs/SequencePipelineIterator.html#/s:15PenguinParallel24PipelineIteratorProtocolP4next7ElementQzSgyKF":{"name":"next()","parent_name":"SequencePipelineIterator"},"Structs/ReduceWindowPipelineIterator/Iterator.html#/s:15PenguinParallel24PipelineIteratorProtocolP4next7ElementQzSgyKF":{"name":"next()","parent_name":"Iterator"},"Structs/ReduceWindowPipelineIterator.html#/s:15PenguinParallel24PipelineIteratorProtocolP7ElementQa":{"name":"Element","parent_name":"ReduceWindowPipelineIterator"},"Structs/ReduceWindowPipelineIterator.html#/s:15PenguinParallel28ReduceWindowPipelineIteratorV0C8Functiona":{"name":"ReduceFunction","abstract":"<p>Undocumented</p>","parent_name":"ReduceWindowPipelineIterator"},"Structs/ReduceWindowPipelineIterator/Iterator.html":{"name":"Iterator","abstract":"<p>Note: copying this iterator outside of the function will result in undefined behavior!</p>","parent_name":"ReduceWindowPipelineIterator"},"Structs/ReduceWindowPipelineIterator.html#/s:15PenguinParallel24PipelineIteratorProtocolP4next7ElementQzSgyKF":{"name":"next()","parent_name":"ReduceWindowPipelineIterator"},"Structs/RangePipelineIterator.html#/s:15PenguinParallel24PipelineIteratorProtocolP7ElementQa":{"name":"Element","parent_name":"RangePipelineIterator"},"Structs/RangePipelineIterator.html#/s:15PenguinParallel21RangePipelineIteratorV5start3end4stepACSi_SiSgSitcfc":{"name":"init(start:end:step:)","abstract":"<p>Undocumented</p>","parent_name":"RangePipelineIterator"},"Structs/RangePipelineIterator.html#/s:15PenguinParallel24PipelineIteratorProtocolP4next7ElementQzSgyKF":{"name":"next()","parent_name":"RangePipelineIterator"},"Structs/RandomIndicesIterator.html#/s:15PenguinParallel24PipelineIteratorProtocolP7ElementQa":{"name":"Element","parent_name":"RandomIndicesIterator"},"Structs/RandomIndicesIterator.html#/s:15PenguinParallel21RandomIndicesIteratorV5count3rngACyxGSi_xtcfc":{"name":"init(count:rng:)","abstract":"<p>Undocumented</p>","parent_name":"RandomIndicesIterator"},"Structs/RandomIndicesIterator.html#/s:15PenguinParallel24PipelineIteratorProtocolP4next7ElementQzSgyKF":{"name":"next()","parent_name":"RandomIndicesIterator"},"Structs/RandomCollectionPipelineIterator.html#/s:15PenguinParallel24PipelineIteratorProtocolP7ElementQa":{"name":"Element","parent_name":"RandomCollectionPipelineIterator"},"Structs/RandomCollectionPipelineIterator.html#/s:15PenguinParallel32RandomCollectionPipelineIteratorVyACyxq_Gx_AA0c7IndicesF0Vyq_Gtcfc":{"name":"init(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"RandomCollectionPipelineIterator"},"Structs/RandomCollectionPipelineIterator.html#/s:15PenguinParallel32RandomCollectionPipelineIteratorV4next7ElementQzSgyF":{"name":"next()","abstract":"<p>Returns the next random element out of the collection.</p>","parent_name":"RandomCollectionPipelineIterator"},"Structs/PrefetchPipelineIterator.html#/s:15PenguinParallel24PipelineIteratorProtocolP7ElementQa":{"name":"Element","parent_name":"PrefetchPipelineIterator"},"Structs/PrefetchPipelineIterator.html#/s:15PenguinParallel24PrefetchPipelineIteratorV10underlying13prefetchCountACyxGx_Sitcfc":{"name":"init(underlying:prefetchCount:)","abstract":"<p>Undocumented</p>","parent_name":"PrefetchPipelineIterator"},"Structs/PrefetchPipelineIterator.html#/s:15PenguinParallel24PipelineIteratorProtocolP4next7ElementQzSgyKF":{"name":"next()","parent_name":"PrefetchPipelineIterator"},"Structs/InterleavePipelineIterator.html#/s:15PenguinParallel24PipelineIteratorProtocolP7ElementQa":{"name":"Element","parent_name":"InterleavePipelineIterator"},"Structs/InterleavePipelineIterator.html#/s:15PenguinParallel26InterleavePipelineIteratorV4Funca":{"name":"Func","abstract":"<p>Undocumented</p>","parent_name":"InterleavePipelineIterator"},"Structs/InterleavePipelineIterator.html#/s:15PenguinParallel26InterleavePipelineIteratorV4next7ElementQy_SgyKF":{"name":"next()","abstract":"<p>Produces the next element.</p>","parent_name":"InterleavePipelineIterator"},"Structs/FunctionGeneratorPipelineIterator.html#/s:15PenguinParallel24PipelineIteratorProtocolP7ElementQa":{"name":"Element","parent_name":"FunctionGeneratorPipelineIterator"},"Structs/FunctionGeneratorPipelineIterator.html#/s:15PenguinParallel33FunctionGeneratorPipelineIteratorV7GenFunca":{"name":"GenFunc","abstract":"<p>Undocumented</p>","parent_name":"FunctionGeneratorPipelineIterator"},"Structs/FunctionGeneratorPipelineIterator.html#/s:15PenguinParallel24PipelineIteratorProtocolP4next7ElementQzSgyKF":{"name":"next()","parent_name":"FunctionGeneratorPipelineIterator"},"Structs/DropPipelineIterator.html#/s:15PenguinParallel24PipelineIteratorProtocolP4next7ElementQzSgyKF":{"name":"next()","parent_name":"DropPipelineIterator"},"Structs/DropPipelineIterator.html":{"name":"DropPipelineIterator","abstract":"<p>Skips the first <code>count</code> elements of an underlying iterator.</p>"},"Structs/FunctionGeneratorPipelineIterator.html":{"name":"FunctionGeneratorPipelineIterator","abstract":"<p>Undocumented</p>"},"Structs/InterleavePipelineIterator.html":{"name":"InterleavePipelineIterator","abstract":"<p>Interleaves the output of multiple producer pipelines.</p>"},"Structs/PrefetchPipelineIterator.html":{"name":"PrefetchPipelineIterator","abstract":"<p>Performs upstream work on a background thread, storing prefetched values"},"Structs/RandomCollectionPipelineIterator.html":{"name":"RandomCollectionPipelineIterator","abstract":"<p>Returns a random permutation of elements in collection C.</p>"},"Structs/RandomIndicesIterator.html":{"name":"RandomIndicesIterator","abstract":"<p>Generates a random purmutation  of the integers <code>0</code> to <code>count</code>.</p>"},"Structs/RangePipelineIterator.html":{"name":"RangePipelineIterator","abstract":"<p>A parallel iterator producing a sequence of integers.</p>"},"Structs/ReduceWindowPipelineIterator.html":{"name":"ReduceWindowPipelineIterator","abstract":"<p>Undocumented</p>"},"Structs/SequencePipelineIterator.html":{"name":"SequencePipelineIterator","abstract":"<p>Undocumented</p>"},"Structs/TakePipelineIterator.html":{"name":"TakePipelineIterator","abstract":"<p>Truncates an underlying iterator to the first <code>takeCount</code> elements.</p>"},"Structs/TransformPipelineIterator.html":{"name":"TransformPipelineIterator","abstract":"<p>Undocumented</p>"},"Structs/Zip2PipelineIterator.html":{"name":"Zip2PipelineIterator","abstract":"<p>Combines two iterators of types <code>L</code> and <code>R</code> into an iterator producing elements of type <code>(L.Element, R.Element)</code>.</p>"},"Extensions/Sequence.html":{"name":"Sequence"},"Extensions/Collection.html#/s:Sl15PenguinParallelSi5IndexRtzrlE28asRandomizedPipelineSequenceyAA016RandomCollectionfG0Vyxqd__Gqd__SGRd__lF":{"name":"asRandomizedPipelineSequence(_:)","abstract":"<p>Undocumented</p>","parent_name":"Collection"},"Structs/Zip2PipelineSequence.html#/s:15PenguinParallel16PipelineSequenceP7ElementQa":{"name":"Element","parent_name":"Zip2PipelineSequence"},"Structs/Zip2PipelineSequence.html#/s:15PenguinParallel20Zip2PipelineSequenceVyACyxq_Gx_q_tcfc":{"name":"init(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"Zip2PipelineSequence"},"Structs/Zip2PipelineSequence.html#/s:15PenguinParallel16PipelineSequenceP12makeIterator0F0QzyF":{"name":"makeIterator()","parent_name":"Zip2PipelineSequence"},"Structs/TransformPipelineSequence.html#/s:15PenguinParallel16PipelineSequenceP7ElementQa":{"name":"Element","parent_name":"TransformPipelineSequence"},"Structs/TransformPipelineSequence.html#/s:15PenguinParallel25TransformPipelineSequenceV0C8Functiona":{"name":"TransformFunction","abstract":"<p>Undocumented</p>","parent_name":"TransformPipelineSequence"},"Structs/TransformPipelineSequence.html#/s:15PenguinParallel25TransformPipelineSequenceV_4name11threadCount10bufferSize9transformACyxq_Gx_SSSgS2iq_Sg7ElementQzKctcfc":{"name":"init(_:name:threadCount:bufferSize:transform:)","abstract":"<p>Undocumented</p>","parent_name":"TransformPipelineSequence"},"Structs/TransformPipelineSequence.html#/s:15PenguinParallel16PipelineSequenceP12makeIterator0F0QzyF":{"name":"makeIterator()","parent_name":"TransformPipelineSequence"},"Structs/SequencePipelineSequence.html#/s:15PenguinParallel16PipelineSequenceP7ElementQa":{"name":"Element","parent_name":"SequencePipelineSequence"},"Structs/SequencePipelineSequence.html#/s:15PenguinParallel16PipelineSequenceP12makeIterator0F0QzyF":{"name":"makeIterator()","parent_name":"SequencePipelineSequence"},"Structs/ReduceWindowPipelineSequence.html#/s:15PenguinParallel16PipelineSequenceP7ElementQa":{"name":"Element","parent_name":"ReduceWindowPipelineSequence"},"Structs/ReduceWindowPipelineSequence.html#/s:15PenguinParallel16PipelineSequenceP8IteratorQa":{"name":"Iterator","parent_name":"ReduceWindowPipelineSequence"},"Structs/ReduceWindowPipelineSequence.html#/s:15PenguinParallel28ReduceWindowPipelineSequenceV0C2Fna":{"name":"ReduceFn","abstract":"<p>Undocumented</p>","parent_name":"ReduceWindowPipelineSequence"},"Structs/ReduceWindowPipelineSequence.html#/s:15PenguinParallel28ReduceWindowPipelineSequenceVyACyxq_Gx_Siq_AA0cdE8IteratorV0G0VyAGQzq__GzKctcfc":{"name":"init(_:_:_:)","abstract":"<p>Undocumented</p>","parent_name":"ReduceWindowPipelineSequence"},"Structs/ReduceWindowPipelineSequence.html#/s:15PenguinParallel16PipelineSequenceP12makeIterator0F0QzyF":{"name":"makeIterator()","parent_name":"ReduceWindowPipelineSequence"},"Structs/RangePipelineSequence.html#/s:15PenguinParallel16PipelineSequenceP7ElementQa":{"name":"Element","parent_name":"RangePipelineSequence"},"Structs/RangePipelineSequence.html#/s:15PenguinParallel21RangePipelineSequenceV5start3end4stepACSi_SiSgSitcfc":{"name":"init(start:end:step:)","abstract":"<p>Undocumented</p>","parent_name":"RangePipelineSequence"},"Structs/RangePipelineSequence.html#/s:15PenguinParallel16PipelineSequenceP12makeIterator0F0QzyF":{"name":"makeIterator()","parent_name":"RangePipelineSequence"},"Structs/RandomIndicesPipelineSequence.html#/s:15PenguinParallel16PipelineSequenceP7ElementQa":{"name":"Element","parent_name":"RandomIndicesPipelineSequence"},"Structs/RandomIndicesPipelineSequence.html#/s:15PenguinParallel29RandomIndicesPipelineSequenceV5count3rngACyxGSi_xtcfc":{"name":"init(count:rng:)","abstract":"<p>Undocumented</p>","parent_name":"RandomIndicesPipelineSequence"},"Structs/RandomIndicesPipelineSequence.html#/s:15PenguinParallel29RandomIndicesPipelineSequenceV12makeIteratorAA0cdH0VyxGyF":{"name":"makeIterator()","abstract":"<p>Makes a PipelineIterator that generates the random permutation of the indices.</p>","parent_name":"RandomIndicesPipelineSequence"},"Structs/RandomCollectionPipelineSequence.html#/s:15PenguinParallel16PipelineSequenceP7ElementQa":{"name":"Element","parent_name":"RandomCollectionPipelineSequence"},"Structs/RandomCollectionPipelineSequence.html#/s:15PenguinParallel32RandomCollectionPipelineSequenceVyACyxq_Gx_q_tcfc":{"name":"init(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"RandomCollectionPipelineSequence"},"Structs/RandomCollectionPipelineSequence.html#/s:15PenguinParallel16PipelineSequenceP12makeIterator0F0QzyF":{"name":"makeIterator()","parent_name":"RandomCollectionPipelineSequence"},"Structs/PrefetchPipelineSequence.html#/s:15PenguinParallel16PipelineSequenceP7ElementQa":{"name":"Element","parent_name":"PrefetchPipelineSequence"},"Structs/PrefetchPipelineSequence.html#/s:15PenguinParallel24PrefetchPipelineSequenceV_13prefetchCountACyxGx_Sitcfc":{"name":"init(_:prefetchCount:)","abstract":"<p>Undocumented</p>","parent_name":"PrefetchPipelineSequence"},"Structs/PrefetchPipelineSequence.html#/s:15PenguinParallel16PipelineSequenceP12makeIterator0F0QzyF":{"name":"makeIterator()","parent_name":"PrefetchPipelineSequence"},"Structs/InterleavePipelineSequence.html#/s:15PenguinParallel16PipelineSequenceP7ElementQa":{"name":"Element","parent_name":"InterleavePipelineSequence"},"Structs/InterleavePipelineSequence.html#/s:15PenguinParallel26InterleavePipelineSequenceV4Funca":{"name":"Func","abstract":"<p>Undocumented</p>","parent_name":"InterleavePipelineSequence"},"Structs/InterleavePipelineSequence.html#/s:15PenguinParallel26InterleavePipelineSequenceV8upstream11workerCount05cycleH0017perWorkerPrefetchH01fACyxq_Gx_S3iq_7ElementQzKctcfc":{"name":"init(upstream:workerCount:cycleCount:perWorkerPrefetchCount:f:)","parent_name":"InterleavePipelineSequence"},"Structs/InterleavePipelineSequence.html#/s:15PenguinParallel16PipelineSequenceP12makeIterator0F0QzyF":{"name":"makeIterator()","parent_name":"InterleavePipelineSequence"},"Structs/InterleavePipelineSequence.html":{"name":"InterleavePipelineSequence","abstract":"<p>Interleaves the output of multiple underlying iterators.</p>"},"Structs/PrefetchPipelineSequence.html":{"name":"PrefetchPipelineSequence","abstract":"<p>Performs upstream work on a background thread, storing prefetched values"},"Structs/RandomCollectionPipelineSequence.html":{"name":"RandomCollectionPipelineSequence","abstract":"<p>Undocumented</p>"},"Structs/RandomIndicesPipelineSequence.html":{"name":"RandomIndicesPipelineSequence","abstract":"<p>The <code>RandomIndicesPipelineSequence</code> will return a random permutation of the numbers in <code>0..&lt;count</code>.</p>"},"Structs/RangePipelineSequence.html":{"name":"RangePipelineSequence","abstract":"<p>A parallel sequence representing a sequence of integers.</p>"},"Structs/ReduceWindowPipelineSequence.html":{"name":"ReduceWindowPipelineSequence","abstract":"<p>Undocumented</p>"},"Structs/SequencePipelineSequence.html":{"name":"SequencePipelineSequence","abstract":"<p>Undocumented</p>"},"Structs/TransformPipelineSequence.html":{"name":"TransformPipelineSequence","abstract":"<p>Undocumented</p>"},"Structs/Zip2PipelineSequence.html":{"name":"Zip2PipelineSequence","abstract":"<p>Combines two pipeline sequences of types <code>L</code> and <code>R</code> into a pipeline sequence with elements of type <code>(L.Element, R.Element)</code>.</p>"},"Extensions/Collection.html":{"name":"Collection"},"Extensions/Array.html#/s:Sa15PenguinParallelE4pMapySayqd__Gqd__xXElF":{"name":"pMap(_:)","abstract":"<p>Makes a new array, where every element in the new array is <code>f(self[i])</code> for all <code>i</code> in <code>0..&lt;count</code>.</p>","parent_name":"Array"},"Extensions/Array.html#/s:Sa15PenguinParallelSjRzlE4pSumxyF":{"name":"pSum()","abstract":"<p>Computes the sum of all the elements in parallel.</p>","parent_name":"Array"},"Extensions/Array.html":{"name":"Array"},"Enums/PipelineIterator.html#/s:15PenguinParallel16PipelineIteratorO12fromFunctionyAA0f9GeneratorcD0VyxGxm_xSgyKctlFZ":{"name":"fromFunction(_:_:)","abstract":"<p>Constructs a pipeline iterator type from a generator function.</p>","parent_name":"PipelineIterator"},"Enums/PipelineIterator.html#/s:15PenguinParallel16PipelineIteratorO12fromFunctionyAA0f9GeneratorcD0VyxGxSgyKclFZ":{"name":"fromFunction(_:)","abstract":"<p>Constructs a pipeline iterator type from a generator function.</p>","parent_name":"PipelineIterator"},"Enums/PipelineIterator.html#/s:15PenguinParallel16PipelineIteratorO18_allThreadsStoppedSbyFZ":{"name":"_allThreadsStopped()","abstract":"<p>Determines if all worker threads started by Pipeline iterators process-wide have been stopped.</p>","parent_name":"PipelineIterator"},"Enums/PipelineIterator.html#/s:15PenguinParallel16PipelineIteratorO5range4from2to4stepAA05RangecD0VSi_SiSgSitFZ":{"name":"range(from:to:step:)","abstract":"<p>Constructs a sequentially increasing counter.</p>","parent_name":"PipelineIterator"},"Enums/PipelineIterator.html#/s:15PenguinParallel16PipelineIteratorO5rangeyAA05RangecD0VSNySiGFZ":{"name":"range(_:)","abstract":"<p>Constructs a sequentially increasing counter covering range <code>range</code>.</p>","parent_name":"PipelineIterator"},"Enums/PipelineIterator.html#/s:15PenguinParallel16PipelineIteratorO5rangeyAA05RangecD0VSnySiGFZ":{"name":"range(_:)","abstract":"<p>Constructs a sequentially increasing counter covering range <code>range</code>.</p>","parent_name":"PipelineIterator"},"Enums/PipelineIterator.html#/s:15PenguinParallel16PipelineIteratorO3zipyAA04Zip2cD0Vyxq_Gx_q_tAA0cD8ProtocolRzAaHR_r0_lFZ":{"name":"zip(_:_:)","abstract":"<p>Combines two pipeline iterators together to produce a single joined sequence.</p>","parent_name":"PipelineIterator"},"Protocols/PipelineIteratorProtocol.html#/s:15PenguinParallel24PipelineIteratorProtocolP7ElementQa":{"name":"Element","abstract":"<p>The type of the elements to be produced by the iterator.</p>","parent_name":"PipelineIteratorProtocol"},"Protocols/PipelineIteratorProtocol.html#/s:15PenguinParallel24PipelineIteratorProtocolP4next7ElementQzSgyKF":{"name":"next()","abstract":"<p>Retrieves the next element in the sequence.</p>","parent_name":"PipelineIteratorProtocol"},"Protocols/PipelineIteratorProtocol.html#/s:15PenguinParallel24PipelineIteratorProtocolPAAE10interleave10cycleCount06workerH0017perWorkerPrefetchH01fAA010InterleavecD0Vyxqd__GSi_SiSgALqd__7ElementQzKctAaBRd__lF":{"name":"interleave(cycleCount:workerCount:perWorkerPrefetchCount:f:)","abstract":"<p>Interleaves the output of multiple underlying iterators.</p>","parent_name":"PipelineIteratorProtocol"},"Protocols/PipelineIteratorProtocol.html#/s:15PenguinParallel24PipelineIteratorProtocolPAAE8prefetchyAA08PrefetchcD0VyxGSiSgF":{"name":"prefetch(_:)","abstract":"<p>Prefetch inserts pipeline parallelism into a pipeline iterator.</p>","parent_name":"PipelineIteratorProtocol"},"Protocols/PipelineIteratorProtocol.html#/s:15PenguinParallel24PipelineIteratorProtocolPAAE7collectSay7ElementQzGyKF":{"name":"collect()","abstract":"<p>Runs the iterator, collecting the outputs into an array.</p>","parent_name":"PipelineIteratorProtocol"},"Protocols/PipelineIteratorProtocol.html#/s:15PenguinParallel24PipelineIteratorProtocolPAAE10enumeratedAA04Zip2cD0VyAA05RangecD0VxGyF":{"name":"enumerated()","abstract":"<p>Adds a sequentially increasing counter to this pipeline iterator.</p>","parent_name":"PipelineIteratorProtocol"},"Protocols/PipelineIteratorProtocol.html#/s:15PenguinParallel24PipelineIteratorProtocolPAAE12reduceWindow10windowSize1fAA08PrefetchcD0VyAA06ReducegcD0Vyxqd__GGSi_qd__AJ0D0Vyxqd___GzKctlF":{"name":"reduceWindow(windowSize:f:)","abstract":"<p>Undocumented</p>","parent_name":"PipelineIteratorProtocol"},"Protocols/PipelineIteratorProtocol.html#/s:15PenguinParallel24PipelineIteratorProtocolPAAE10naiveBatch4sizeAA08PrefetchcD0VyAA012ReduceWindowcD0VyxSay7ElementQzGGGSi_tF":{"name":"naiveBatch(size:)","abstract":"<p>Undocumented</p>","parent_name":"PipelineIteratorProtocol"},"Protocols/PipelineIteratorProtocol.html#/s:15PenguinParallel24PipelineIteratorProtocolPAAE4dropyAA04DropcD0VyxGSiF":{"name":"drop(_:)","abstract":"<p>Drops the first <code>count</code> elements of the current iterator.</p>","parent_name":"PipelineIteratorProtocol"},"Protocols/PipelineIteratorProtocol.html#/s:15PenguinParallel24PipelineIteratorProtocolPAAE4takeyAA04TakecD0VyxGSiF":{"name":"take(_:)","abstract":"<p>Truncates the current iterator to the first <code>count</code> elements.</p>","parent_name":"PipelineIteratorProtocol"},"Protocols/PipelineIteratorProtocol.html#/s:15PenguinParallel24PipelineIteratorProtocolPAAE3map4name1fAA09TransformcD0Vyxqd__GSSSg_qd__7ElementQzKctlF":{"name":"map(name:f:)","abstract":"<p>Undocumented</p>","parent_name":"PipelineIteratorProtocol"},"Protocols/PipelineIteratorProtocol.html#/s:15PenguinParallel24PipelineIteratorProtocolPAAE6filter4name1fAA09TransformcD0Vyx7ElementQzGSSSg_SbAJKctF":{"name":"filter(name:f:)","abstract":"<p>Undocumented</p>","parent_name":"PipelineIteratorProtocol"},"Protocols/PipelineIteratorProtocol.html#/s:15PenguinParallel24PipelineIteratorProtocolPAAE10compactMap4name1fAA09TransformcD0Vyxqd__GSSSg_qd__Sg7ElementQzKctlF":{"name":"compactMap(name:f:)","abstract":"<p>Undocumented</p>","parent_name":"PipelineIteratorProtocol"},"Protocols/PipelineSequence.html#/s:15PenguinParallel16PipelineSequenceP7ElementQa":{"name":"Element","abstract":"<p>The type of the items to be produced when iterating over this <code>PipelineSequence</code>.</p>","parent_name":"PipelineSequence"},"Protocols/PipelineSequence.html#/s:15PenguinParallel16PipelineSequenceP8IteratorQa":{"name":"Iterator","abstract":"<p>The type of the iterator used to iterate over the <code>PipelineSequence</code>.</p>","parent_name":"PipelineSequence"},"Protocols/PipelineSequence.html#/s:15PenguinParallel16PipelineSequenceP12makeIterator0F0QzyF":{"name":"makeIterator()","abstract":"<p>Builds an iterator to produce elements corresponding to this sequence.</p>","parent_name":"PipelineSequence"},"Protocols/PipelineSequence.html#/s:15PenguinParallel16PipelineSequencePAAE10interleave10cycleCount06workerG0017perWorkerPrefetchG01fAA010InterleavecD0Vyxqd__GSi_SiSgALqd__7ElementQzKctAaBRd__lF":{"name":"interleave(cycleCount:workerCount:perWorkerPrefetchCount:f:)","abstract":"<p>Interleaves the output of multiple underlying <code>PipelineSequence</code>s.</p>","parent_name":"PipelineSequence"},"Protocols/PipelineSequence.html#/s:15PenguinParallel16PipelineSequencePAAE8prefetchyAA08PrefetchcD0VyxGSiSgF":{"name":"prefetch(_:)","abstract":"<p>Prefetch inserts pipeline parallelism into a pipeline iterator.</p>","parent_name":"PipelineSequence"},"Protocols/PipelineSequence.html#/s:15PenguinParallel16PipelineSequencePAAE10enumeratedAA04Zip2cD0VyAA05RangecD0VxGyF":{"name":"enumerated()","abstract":"<p>Adds a sequentially increasing counter to this pipeline sequence.</p>","parent_name":"PipelineSequence"},"Protocols/PipelineSequence.html#/s:15PenguinParallel16PipelineSequencePAAE3map4name1fAA09TransformcD0Vyxqd__GSSSg_qd__7ElementQzKctlF":{"name":"map(name:f:)","abstract":"<p>Transforms the iterator from returning elements of type <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/PipelineSequence.html#/s:15PenguinParallel16PipelineSequenceP7ElementQa\">Element</a></code> into returning elements of type <code>T</code>.</p>","parent_name":"PipelineSequence"},"Protocols/PipelineSequence.html#/s:15PenguinParallel16PipelineSequencePAAE6filter4name1fAA09TransformcD0Vyx7ElementQzGSSSg_SbAJKctF":{"name":"filter(name:f:)","abstract":"<p>Filter removes elements where <code>f(elem)</code> returns <code>false</code>, but passes through elements that","parent_name":"PipelineSequence"},"Protocols/PipelineSequence.html#/s:15PenguinParallel16PipelineSequencePAAE10compactMap4name1fAA09TransformcD0Vyxqd__GSSSg_qd__Sg7ElementQzKctlF":{"name":"compactMap(name:f:)","abstract":"<p>Compact map removes <code>nil</code>s, but passes through transformed elements of type <code>T</code>.</p>","parent_name":"PipelineSequence"},"Protocols/PipelineSequence.html":{"name":"PipelineSequence","abstract":"<p>A PipelineSequence represents a pipeline-parallelizable sequence of items.</p>"},"Protocols/PipelineIteratorProtocol.html":{"name":"PipelineIteratorProtocol","abstract":"<p>A type that supplies the value of a sequence one at a time.</p>"},"Enums/PipelineIterator.html":{"name":"PipelineIterator","abstract":"<p>PipelineIterator contains methods that are useful for creating <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/PipelineIteratorProtocol.html\">PipelineIteratorProtocol</a></code> types.</p>"},"Pipelines.html":{"name":"Pipelines"},"Parallel.html":{"name":"Parallel"},"Pipeline%20Sequence%20Types.html":{"name":"Pipeline Sequence Types"},"Pipeline%20Iterator%20Types.html":{"name":"Pipeline Iterator Types"},"Parallel%20Internals.html":{"name":"Parallel Internals"},"Other%20Classes.html":{"name":"Other Classes","abstract":"<p>The following classes are available globally.</p>"},"Other%20Enums.html":{"name":"Other Enumerations","abstract":"<p>The following enumerations are available globally.</p>"},"Other%20Protocols.html":{"name":"Other Protocols","abstract":"<p>The following protocols are available globally.</p>"},"Other%20Structs.html":{"name":"Other Structures","abstract":"<p>The following structures are available globally.</p>"}}